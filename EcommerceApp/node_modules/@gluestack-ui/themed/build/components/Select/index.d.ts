/// <reference types="react" />
export declare const Select: import("@gluestack-ui/select/lib/typescript/types").ISelectComponentType<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "Select", typeof import("react-native").View>, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, "SelectTrigger", import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>>, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextInputProps, "SelectInput", typeof import("react-native").TextInput>, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, unknown, import("@gluestack-style/react/lib/typescript/types").RNProps & {
    as?: any;
}, "BaseIcon", import("react").ComponentType<import("@gluestack-style/react/lib/typescript/types").RNProps & {
    as?: any;
}>>, "SelectIcon", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, unknown, import("@gluestack-style/react/lib/typescript/types").RNProps & {
    as?: any;
}, "BaseIcon", import("react").ComponentType<import("@gluestack-style/react/lib/typescript/types").RNProps & {
    as?: any;
}>>>>, import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheet", typeof import("react-native").View>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheet", typeof import("react-native").View> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetProps, "ref">, import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & {
    animationComponentGluestack: true;
}, "SelectActionsheetBackdrop", {
    (props: import("react-native").PressableProps & {
        animationComponentGluestack: true;
    }): import("react").JSX.Element;
    displayName: string;
}>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & {
    animationComponentGluestack: true;
}, "SelectActionsheetBackdrop", {
    (props: import("react-native").PressableProps & {
        animationComponentGluestack: true;
    }): import("react").JSX.Element;
    displayName: string;
}>, "ref">, Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps & {
    animationComponentGluestack: true;
}, "SelectActionsheetContent", {
    (props: import("react-native").ViewProps & {
        animationComponentGluestack: true;
    }): import("react").JSX.Element;
    displayName: string;
}> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetContentProps, "ref"> & import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps & {
    animationComponentGluestack: true;
}, "SelectActionsheetContent", {
    (props: import("react-native").ViewProps & {
        animationComponentGluestack: true;
    }): import("react").JSX.Element;
    displayName: string;
}>>, import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheetDragIndicator", typeof import("react-native").View>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheetDragIndicator", typeof import("react-native").View>, "ref">, import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheetIndicatorWrapper", typeof import("react-native").View>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheetIndicatorWrapper", typeof import("react-native").View>, "ref">, Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, "SelectActionsheetItem", import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetItemProps, "ref"> & import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, "SelectActionsheetItem", import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>>>, import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>, "SelectActionsheetItemText", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>>>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>, "SelectActionsheetItemText", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>>>, "ref">, import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ScrollViewProps, "ScrollView", typeof import("react-native").ScrollView>, "SelectActionsheetScrollView", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ScrollViewProps, "ScrollView", typeof import("react-native").ScrollView>>>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ScrollViewProps, "ScrollView", typeof import("react-native").ScrollView>, "SelectActionsheetScrollView", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ScrollViewProps, "ScrollView", typeof import("react-native").ScrollView>>>, "ref">, import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").VirtualizedListProps<unknown>, "SelectActionsheetVirtualizedList", typeof import("react-native").VirtualizedList>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").VirtualizedListProps<unknown>, "SelectActionsheetVirtualizedList", typeof import("react-native").VirtualizedList>, "ref">, import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").FlatListProps<unknown>, "FlatList", typeof import("react-native").FlatList>, "SelectActionsheetFlatList", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").FlatListProps<unknown>, "FlatList", typeof import("react-native").FlatList>>>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").FlatListProps<unknown>, "FlatList", typeof import("react-native").FlatList>, "SelectActionsheetFlatList", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").FlatListProps<unknown>, "FlatList", typeof import("react-native").FlatList>>>, "ref">, import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").SectionListProps<unknown, unknown>, "SectionList", typeof import("react-native").SectionList>, "SelectActionsheetSectionList", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").SectionListProps<unknown, unknown>, "SectionList", typeof import("react-native").SectionList>>>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").SectionListProps<unknown, unknown>, "SectionList", typeof import("react-native").SectionList>, "SelectActionsheetSectionList", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").SectionListProps<unknown, unknown>, "SectionList", typeof import("react-native").SectionList>>>, "ref">, import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>, "SelectActionsheetSectionHeaderText", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>>>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>, "SelectActionsheetSectionHeaderText", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>>>, "ref">>;
export declare const SelectTrigger: import("react").ForwardRefExoticComponent<Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, "SelectTrigger", import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>>, "ref"> & import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, "SelectTrigger", import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>>>>;
export declare const SelectInput: import("react").ForwardRefExoticComponent<Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextInputProps, "SelectInput", typeof import("react-native").TextInput>, "ref"> & import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextInputProps, "SelectInput", typeof import("react-native").TextInput>>>;
export declare const SelectIcon: import("react").ForwardRefExoticComponent<Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, unknown, import("@gluestack-style/react/lib/typescript/types").RNProps & {
    as?: any;
}, "BaseIcon", import("react").ComponentType<import("@gluestack-style/react/lib/typescript/types").RNProps & {
    as?: any;
}>>, "SelectIcon", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, unknown, import("@gluestack-style/react/lib/typescript/types").RNProps & {
    as?: any;
}, "BaseIcon", import("react").ComponentType<import("@gluestack-style/react/lib/typescript/types").RNProps & {
    as?: any;
}>>>>, "ref"> & import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, unknown, import("@gluestack-style/react/lib/typescript/types").RNProps & {
    as?: any;
}, "BaseIcon", import("react").ComponentType<import("@gluestack-style/react/lib/typescript/types").RNProps & {
    as?: any;
}>>, "SelectIcon", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, unknown, import("@gluestack-style/react/lib/typescript/types").RNProps & {
    as?: any;
}, "BaseIcon", import("react").ComponentType<import("@gluestack-style/react/lib/typescript/types").RNProps & {
    as?: any;
}>>>>>>;
export declare const SelectPortal: import("react").ForwardRefExoticComponent<Omit<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheet", typeof import("react-native").View>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheet", typeof import("react-native").View> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetProps, "ref">, "ref"> & import("react").RefAttributes<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheet", typeof import("react-native").View>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheet", typeof import("react-native").View> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetProps, "ref">>>;
export declare const SelectBackdrop: import("react").ForwardRefExoticComponent<Omit<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & {
    animationComponentGluestack: true;
}, "SelectActionsheetBackdrop", {
    (props: import("react-native").PressableProps & {
        animationComponentGluestack: true;
    }): import("react").JSX.Element;
    displayName: string;
}>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & {
    animationComponentGluestack: true;
}, "SelectActionsheetBackdrop", {
    (props: import("react-native").PressableProps & {
        animationComponentGluestack: true;
    }): import("react").JSX.Element;
    displayName: string;
}>, "ref">, "ref"> & import("react").RefAttributes<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & {
    animationComponentGluestack: true;
}, "SelectActionsheetBackdrop", {
    (props: import("react-native").PressableProps & {
        animationComponentGluestack: true;
    }): import("react").JSX.Element;
    displayName: string;
}>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & {
    animationComponentGluestack: true;
}, "SelectActionsheetBackdrop", {
    (props: import("react-native").PressableProps & {
        animationComponentGluestack: true;
    }): import("react").JSX.Element;
    displayName: string;
}>, "ref">>>;
export declare const SelectContent: import("react").ForwardRefExoticComponent<Omit<Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps & {
    animationComponentGluestack: true;
}, "SelectActionsheetContent", {
    (props: import("react-native").ViewProps & {
        animationComponentGluestack: true;
    }): import("react").JSX.Element;
    displayName: string;
}> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetContentProps, "ref"> & import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps & {
    animationComponentGluestack: true;
}, "SelectActionsheetContent", {
    (props: import("react-native").ViewProps & {
        animationComponentGluestack: true;
    }): import("react").JSX.Element;
    displayName: string;
}>>, "ref"> & import("react").RefAttributes<Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps & {
    animationComponentGluestack: true;
}, "SelectActionsheetContent", {
    (props: import("react-native").ViewProps & {
        animationComponentGluestack: true;
    }): import("react").JSX.Element;
    displayName: string;
}> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetContentProps, "ref"> & import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps & {
    animationComponentGluestack: true;
}, "SelectActionsheetContent", {
    (props: import("react-native").ViewProps & {
        animationComponentGluestack: true;
    }): import("react").JSX.Element;
    displayName: string;
}>>>>;
export declare const SelectDragIndicator: import("react").ForwardRefExoticComponent<Omit<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheetDragIndicator", typeof import("react-native").View>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheetDragIndicator", typeof import("react-native").View>, "ref">, "ref"> & import("react").RefAttributes<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheetDragIndicator", typeof import("react-native").View>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheetDragIndicator", typeof import("react-native").View>, "ref">>>;
export declare const SelectDragIndicatorWrapper: import("react").ForwardRefExoticComponent<Omit<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheetIndicatorWrapper", typeof import("react-native").View>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheetIndicatorWrapper", typeof import("react-native").View>, "ref">, "ref"> & import("react").RefAttributes<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheetIndicatorWrapper", typeof import("react-native").View>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "SelectActionsheetIndicatorWrapper", typeof import("react-native").View>, "ref">>>;
export declare const SelectItem: import("react").ForwardRefExoticComponent<import("@gluestack-ui/select/lib/typescript/types").ISelectItemProps & Omit<Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, "SelectActionsheetItem", import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetItemProps, "ref"> & import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, "SelectActionsheetItem", import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>>>, "ref"> & import("react").RefAttributes<Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, "SelectActionsheetItem", import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetItemProps, "ref"> & import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, "SelectActionsheetItem", import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>>>> & {
    textStyle?: {
        [x: `$_${string}`]: import("@gluestack-style/react/lib/typescript/types").SxProps<import("@gluestack-style/react/lib/typescript/types").RNStyledProps, unknown, import("react-native").TextProps, "", "", []> | undefined;
        ref?: import("react").LegacyRef<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>, "SelectActionsheetItemText", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>>>> | undefined;
        key?: import("react").Key | null | undefined;
        gap?: (number & {}) | undefined;
        columnGap?: (number & {}) | undefined;
        rowGap?: (number & {}) | undefined;
        margin?: import("react-native").DimensionValue | undefined;
        marginTop?: import("react-native").DimensionValue | undefined;
        marginRight?: import("react-native").DimensionValue | undefined;
        marginBottom?: import("react-native").DimensionValue | undefined;
        marginLeft?: import("react-native").DimensionValue | undefined;
        marginHorizontal?: import("react-native").DimensionValue | undefined;
        marginVertical?: import("react-native").DimensionValue | undefined;
        padding?: import("react-native").DimensionValue | undefined;
        paddingTop?: import("react-native").DimensionValue | undefined;
        paddingRight?: import("react-native").DimensionValue | undefined;
        paddingBottom?: import("react-native").DimensionValue | undefined;
        paddingLeft?: import("react-native").DimensionValue | undefined;
        paddingHorizontal?: import("react-native").DimensionValue | undefined;
        paddingVertical?: import("react-native").DimensionValue | undefined;
        paddingStart?: import("react-native").DimensionValue | undefined;
        paddingEnd?: import("react-native").DimensionValue | undefined;
        top?: import("react-native").DimensionValue | undefined;
        right?: import("react-native").DimensionValue | undefined;
        bottom?: import("react-native").DimensionValue | undefined;
        left?: import("react-native").DimensionValue | undefined;
        shadowRadius?: (number & {}) | undefined;
        elevation?: (number & {}) | undefined;
        fontSize?: (number & {}) | undefined;
        backgroundColor?: (string & {}) | undefined;
        borderBottomColor?: (string & {}) | undefined;
        borderColor?: (string & {}) | undefined;
        borderLeftColor?: (string & {}) | undefined;
        borderRightColor?: (string & {}) | undefined;
        borderTopColor?: (string & {}) | undefined;
        color?: (string & {}) | undefined;
        textDecorationColor?: (string & {}) | undefined;
        shadowColor?: (string & {}) | undefined;
        borderBlockColor?: (string & {}) | undefined;
        borderBlockEndColor?: (string & {}) | undefined;
        borderBlockStartColor?: (string & {}) | undefined;
        borderEndEndRadius?: import("react-native").AnimatableNumericValue | undefined;
        borderStartStartRadius?: import("react-native").AnimatableNumericValue | undefined;
        borderStartEndRadius?: import("react-native").AnimatableNumericValue | undefined;
        borderEndStartRadius?: import("react-native").AnimatableNumericValue | undefined;
        shadowOpacity?: import("react-native").AnimatableNumericValue | undefined;
        opacity?: import("react-native").AnimatableNumericValue | undefined;
        fontFamily?: (string & {}) | undefined;
        fontWeight?: (string & {}) | undefined;
        lineHeight?: (number & {}) | undefined;
        letterSpacing?: (number & {}) | undefined;
        width?: import("react-native").DimensionValue | undefined;
        minWidth?: import("react-native").DimensionValue | undefined;
        maxWidth?: import("react-native").DimensionValue | undefined;
        height?: import("react-native").DimensionValue | undefined;
        minHeight?: import("react-native").DimensionValue | undefined;
        maxHeight?: import("react-native").DimensionValue | undefined;
        flexBasis?: import("react-native").DimensionValue | undefined;
        borderWidth?: (number & {}) | undefined;
        borderTopWidth?: (number & {}) | undefined;
        borderRightWidth?: (number & {}) | undefined;
        borderBottomWidth?: (number & {}) | undefined;
        borderLeftWidth?: (number & {}) | undefined;
        borderStyle?: (string & {}) | undefined;
        borderRadius?: import("react-native").AnimatableNumericValue | undefined;
        borderTopLeftRadius?: import("react-native").AnimatableNumericValue | undefined;
        borderTopRightRadius?: import("react-native").AnimatableNumericValue | undefined;
        borderBottomRightRadius?: import("react-native").AnimatableNumericValue | undefined;
        borderBottomLeftRadius?: import("react-native").AnimatableNumericValue | undefined;
        zIndex?: (number & {}) | undefined;
        disabled?: boolean | undefined;
        backfaceVisibility?: "visible" | "hidden" | undefined;
        borderBottomEndRadius?: import("react-native").AnimatableNumericValue | undefined;
        borderBottomStartRadius?: import("react-native").AnimatableNumericValue | undefined;
        borderEndColor?: import("react-native").ColorValue | undefined;
        borderStartColor?: import("react-native").ColorValue | undefined;
        borderTopEndRadius?: import("react-native").AnimatableNumericValue | undefined;
        borderTopStartRadius?: import("react-native").AnimatableNumericValue | undefined;
        testID?: string | undefined;
        alignContent?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        alignItems?: import("react-native").FlexAlignType | undefined;
        alignSelf?: "auto" | import("react-native").FlexAlignType | undefined;
        aspectRatio?: string | number | undefined;
        borderEndWidth?: number | undefined;
        borderStartWidth?: number | undefined;
        display?: "flex" | "none" | undefined;
        end?: import("react-native").DimensionValue | undefined;
        flex?: number | undefined;
        flexDirection?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        flexGrow?: number | undefined;
        flexShrink?: number | undefined;
        flexWrap?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        justifyContent?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        marginEnd?: import("react-native").DimensionValue | undefined;
        marginStart?: import("react-native").DimensionValue | undefined;
        overflow?: "visible" | "hidden" | "scroll" | undefined;
        position?: "absolute" | "relative" | undefined;
        start?: import("react-native").DimensionValue | undefined;
        direction?: "inherit" | "ltr" | "rtl" | undefined;
        shadowOffset?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        transform?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        transformMatrix?: number[] | undefined;
        rotation?: import("react-native").AnimatableNumericValue | undefined;
        scaleX?: import("react-native").AnimatableNumericValue | undefined;
        scaleY?: import("react-native").AnimatableNumericValue | undefined;
        translateX?: import("react-native").AnimatableNumericValue | undefined;
        translateY?: import("react-native").AnimatableNumericValue | undefined;
        fontStyle?: "normal" | "italic" | undefined;
        textAlign?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        textDecorationLine?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        textDecorationStyle?: "solid" | "dotted" | "dashed" | "double" | undefined;
        textShadowColor?: import("react-native").ColorValue | undefined;
        textShadowOffset?: {
            width: number;
            height: number;
        } | undefined;
        textShadowRadius?: number | undefined;
        textTransform?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        fontVariant?: import("react-native").FontVariant[] | undefined;
        writingDirection?: "auto" | "ltr" | "rtl" | undefined;
        textAlignVertical?: "top" | "bottom" | "center" | "auto" | undefined;
        includeFontPadding?: boolean | undefined;
        style?: import("react-native").StyleProp<import("react-native").TextStyle>;
        sx?: Partial<import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> & {}> | undefined;
        children?: import("react").ReactNode;
        id?: string | undefined;
        onLayout?: ((event: import("react-native").LayoutChangeEvent) => void) | undefined;
        pointerEvents?: "auto" | "none" | "box-none" | "box-only" | undefined;
        nativeID?: string | undefined;
        accessible?: boolean | undefined;
        accessibilityActions?: readonly Readonly<{
            name: string;
            label?: string | undefined;
        }>[] | undefined;
        accessibilityLabel?: string | undefined;
        'aria-label'?: string | undefined;
        accessibilityRole?: import("react-native").AccessibilityRole | undefined;
        accessibilityState?: import("react-native").AccessibilityState | undefined;
        'aria-busy'?: boolean | undefined;
        'aria-checked'?: boolean | "mixed" | undefined;
        'aria-disabled'?: boolean | undefined;
        'aria-expanded'?: boolean | undefined;
        'aria-selected'?: boolean | undefined;
        'aria-labelledby'?: string | undefined;
        accessibilityHint?: string | undefined;
        accessibilityValue?: import("react-native").AccessibilityValue | undefined;
        'aria-valuemax'?: number | undefined;
        'aria-valuemin'?: number | undefined;
        'aria-valuenow'?: number | undefined;
        'aria-valuetext'?: string | undefined;
        onAccessibilityAction?: ((event: import("react-native").AccessibilityActionEvent) => void) | undefined;
        importantForAccessibility?: "auto" | "yes" | "no" | "no-hide-descendants" | undefined;
        'aria-hidden'?: boolean | undefined;
        'aria-live'?: "polite" | "assertive" | "off" | undefined;
        'aria-modal'?: boolean | undefined;
        role?: import("react-native").Role | undefined;
        accessibilityLiveRegion?: "none" | "polite" | "assertive" | undefined;
        accessibilityLabelledBy?: string | string[] | undefined;
        accessibilityElementsHidden?: boolean | undefined;
        accessibilityViewIsModal?: boolean | undefined;
        onAccessibilityEscape?: (() => void) | undefined;
        onAccessibilityTap?: (() => void) | undefined;
        onMagicTap?: (() => void) | undefined;
        accessibilityIgnoresInvertColors?: boolean | undefined;
        accessibilityLanguage?: string | undefined;
        borderCurve?: "circular" | "continuous" | undefined;
        $indeterminate?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        $checked?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        $readOnly?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        $required?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        $invalid?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        $focus?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        $focusVisible?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        $hover?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        $pressed?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        $active?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        $loading?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        $disabled?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        $ios?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        $android?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        $web?: import("@gluestack-style/react/lib/typescript/types").SxProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "", "", []> | undefined;
        states?: {
            indeterminate?: boolean | undefined;
            checked?: boolean | undefined;
            readOnly?: boolean | undefined;
            required?: boolean | undefined;
            invalid?: boolean | undefined;
            focus?: boolean | undefined;
            focusVisible?: boolean | undefined;
            hover?: boolean | undefined;
            pressed?: boolean | undefined;
            active?: boolean | undefined;
            loading?: boolean | undefined;
            disabled?: boolean | undefined;
        } | undefined;
        as?: any;
        "$indeterminate-gap"?: (number & {}) | undefined;
        "$indeterminate-columnGap"?: (number & {}) | undefined;
        "$indeterminate-rowGap"?: (number & {}) | undefined;
        "$indeterminate-margin"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-marginTop"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-marginRight"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-padding"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-top"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-right"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-bottom"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-left"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-shadowRadius"?: (number & {}) | undefined;
        "$indeterminate-elevation"?: (number & {}) | undefined;
        "$indeterminate-backgroundColor"?: (string & {}) | undefined;
        "$indeterminate-borderBottomColor"?: (string & {}) | undefined;
        "$indeterminate-borderColor"?: (string & {}) | undefined;
        "$indeterminate-borderLeftColor"?: (string & {}) | undefined;
        "$indeterminate-borderRightColor"?: (string & {}) | undefined;
        "$indeterminate-borderTopColor"?: (string & {}) | undefined;
        "$indeterminate-shadowColor"?: (string & {}) | undefined;
        "$indeterminate-borderBlockColor"?: (string & {}) | undefined;
        "$indeterminate-borderBlockEndColor"?: (string & {}) | undefined;
        "$indeterminate-borderBlockStartColor"?: (string & {}) | undefined;
        "$indeterminate-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-width"?: unknown;
        "$indeterminate-minWidth"?: unknown;
        "$indeterminate-maxWidth"?: unknown;
        "$indeterminate-height"?: unknown;
        "$indeterminate-minHeight"?: unknown;
        "$indeterminate-maxHeight"?: unknown;
        "$indeterminate-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-borderWidth"?: (number & {}) | undefined;
        "$indeterminate-borderTopWidth"?: (number & {}) | undefined;
        "$indeterminate-borderRightWidth"?: (number & {}) | undefined;
        "$indeterminate-borderBottomWidth"?: (number & {}) | undefined;
        "$indeterminate-borderLeftWidth"?: (number & {}) | undefined;
        "$indeterminate-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$indeterminate-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-zIndex"?: number | undefined;
        "$indeterminate-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$indeterminate-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$indeterminate-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$indeterminate-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$indeterminate-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$indeterminate-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$indeterminate-aspectRatio"?: string | number | undefined;
        "$indeterminate-borderEndWidth"?: number | undefined;
        "$indeterminate-borderStartWidth"?: number | undefined;
        "$indeterminate-display"?: "flex" | "none" | undefined;
        "$indeterminate-end"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-flex"?: number | undefined;
        "$indeterminate-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$indeterminate-flexGrow"?: number | undefined;
        "$indeterminate-flexShrink"?: number | undefined;
        "$indeterminate-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$indeterminate-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$indeterminate-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-marginStart"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$indeterminate-position"?: "absolute" | "relative" | undefined;
        "$indeterminate-start"?: import("react-native").DimensionValue | undefined;
        "$indeterminate-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$indeterminate-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$indeterminate-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$indeterminate-transformMatrix"?: number[] | undefined;
        "$indeterminate-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$indeterminate-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$indeterminate-borderCurve"?: "circular" | "continuous" | undefined;
        "$checked-gap"?: (number & {}) | undefined;
        "$checked-columnGap"?: (number & {}) | undefined;
        "$checked-rowGap"?: (number & {}) | undefined;
        "$checked-margin"?: import("react-native").DimensionValue | undefined;
        "$checked-marginTop"?: import("react-native").DimensionValue | undefined;
        "$checked-marginRight"?: import("react-native").DimensionValue | undefined;
        "$checked-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$checked-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$checked-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$checked-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$checked-padding"?: import("react-native").DimensionValue | undefined;
        "$checked-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$checked-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$checked-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$checked-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$checked-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$checked-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$checked-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$checked-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$checked-top"?: import("react-native").DimensionValue | undefined;
        "$checked-right"?: import("react-native").DimensionValue | undefined;
        "$checked-bottom"?: import("react-native").DimensionValue | undefined;
        "$checked-left"?: import("react-native").DimensionValue | undefined;
        "$checked-shadowRadius"?: (number & {}) | undefined;
        "$checked-elevation"?: (number & {}) | undefined;
        "$checked-backgroundColor"?: (string & {}) | undefined;
        "$checked-borderBottomColor"?: (string & {}) | undefined;
        "$checked-borderColor"?: (string & {}) | undefined;
        "$checked-borderLeftColor"?: (string & {}) | undefined;
        "$checked-borderRightColor"?: (string & {}) | undefined;
        "$checked-borderTopColor"?: (string & {}) | undefined;
        "$checked-shadowColor"?: (string & {}) | undefined;
        "$checked-borderBlockColor"?: (string & {}) | undefined;
        "$checked-borderBlockEndColor"?: (string & {}) | undefined;
        "$checked-borderBlockStartColor"?: (string & {}) | undefined;
        "$checked-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-width"?: unknown;
        "$checked-minWidth"?: unknown;
        "$checked-maxWidth"?: unknown;
        "$checked-height"?: unknown;
        "$checked-minHeight"?: unknown;
        "$checked-maxHeight"?: unknown;
        "$checked-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$checked-borderWidth"?: (number & {}) | undefined;
        "$checked-borderTopWidth"?: (number & {}) | undefined;
        "$checked-borderRightWidth"?: (number & {}) | undefined;
        "$checked-borderBottomWidth"?: (number & {}) | undefined;
        "$checked-borderLeftWidth"?: (number & {}) | undefined;
        "$checked-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$checked-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-zIndex"?: number | undefined;
        "$checked-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$checked-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$checked-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$checked-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$checked-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$checked-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$checked-aspectRatio"?: string | number | undefined;
        "$checked-borderEndWidth"?: number | undefined;
        "$checked-borderStartWidth"?: number | undefined;
        "$checked-display"?: "flex" | "none" | undefined;
        "$checked-end"?: import("react-native").DimensionValue | undefined;
        "$checked-flex"?: number | undefined;
        "$checked-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$checked-flexGrow"?: number | undefined;
        "$checked-flexShrink"?: number | undefined;
        "$checked-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$checked-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$checked-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$checked-marginStart"?: import("react-native").DimensionValue | undefined;
        "$checked-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$checked-position"?: "absolute" | "relative" | undefined;
        "$checked-start"?: import("react-native").DimensionValue | undefined;
        "$checked-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$checked-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$checked-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$checked-transformMatrix"?: number[] | undefined;
        "$checked-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$checked-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$checked-borderCurve"?: "circular" | "continuous" | undefined;
        "$readOnly-gap"?: (number & {}) | undefined;
        "$readOnly-columnGap"?: (number & {}) | undefined;
        "$readOnly-rowGap"?: (number & {}) | undefined;
        "$readOnly-margin"?: import("react-native").DimensionValue | undefined;
        "$readOnly-marginTop"?: import("react-native").DimensionValue | undefined;
        "$readOnly-marginRight"?: import("react-native").DimensionValue | undefined;
        "$readOnly-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$readOnly-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$readOnly-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$readOnly-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$readOnly-padding"?: import("react-native").DimensionValue | undefined;
        "$readOnly-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$readOnly-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$readOnly-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$readOnly-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$readOnly-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$readOnly-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$readOnly-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$readOnly-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$readOnly-top"?: import("react-native").DimensionValue | undefined;
        "$readOnly-right"?: import("react-native").DimensionValue | undefined;
        "$readOnly-bottom"?: import("react-native").DimensionValue | undefined;
        "$readOnly-left"?: import("react-native").DimensionValue | undefined;
        "$readOnly-shadowRadius"?: (number & {}) | undefined;
        "$readOnly-elevation"?: (number & {}) | undefined;
        "$readOnly-backgroundColor"?: (string & {}) | undefined;
        "$readOnly-borderBottomColor"?: (string & {}) | undefined;
        "$readOnly-borderColor"?: (string & {}) | undefined;
        "$readOnly-borderLeftColor"?: (string & {}) | undefined;
        "$readOnly-borderRightColor"?: (string & {}) | undefined;
        "$readOnly-borderTopColor"?: (string & {}) | undefined;
        "$readOnly-shadowColor"?: (string & {}) | undefined;
        "$readOnly-borderBlockColor"?: (string & {}) | undefined;
        "$readOnly-borderBlockEndColor"?: (string & {}) | undefined;
        "$readOnly-borderBlockStartColor"?: (string & {}) | undefined;
        "$readOnly-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-width"?: unknown;
        "$readOnly-minWidth"?: unknown;
        "$readOnly-maxWidth"?: unknown;
        "$readOnly-height"?: unknown;
        "$readOnly-minHeight"?: unknown;
        "$readOnly-maxHeight"?: unknown;
        "$readOnly-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$readOnly-borderWidth"?: (number & {}) | undefined;
        "$readOnly-borderTopWidth"?: (number & {}) | undefined;
        "$readOnly-borderRightWidth"?: (number & {}) | undefined;
        "$readOnly-borderBottomWidth"?: (number & {}) | undefined;
        "$readOnly-borderLeftWidth"?: (number & {}) | undefined;
        "$readOnly-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$readOnly-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-zIndex"?: number | undefined;
        "$readOnly-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$readOnly-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$readOnly-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$readOnly-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$readOnly-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$readOnly-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$readOnly-aspectRatio"?: string | number | undefined;
        "$readOnly-borderEndWidth"?: number | undefined;
        "$readOnly-borderStartWidth"?: number | undefined;
        "$readOnly-display"?: "flex" | "none" | undefined;
        "$readOnly-end"?: import("react-native").DimensionValue | undefined;
        "$readOnly-flex"?: number | undefined;
        "$readOnly-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$readOnly-flexGrow"?: number | undefined;
        "$readOnly-flexShrink"?: number | undefined;
        "$readOnly-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$readOnly-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$readOnly-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$readOnly-marginStart"?: import("react-native").DimensionValue | undefined;
        "$readOnly-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$readOnly-position"?: "absolute" | "relative" | undefined;
        "$readOnly-start"?: import("react-native").DimensionValue | undefined;
        "$readOnly-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$readOnly-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$readOnly-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$readOnly-transformMatrix"?: number[] | undefined;
        "$readOnly-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$readOnly-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$readOnly-borderCurve"?: "circular" | "continuous" | undefined;
        "$required-gap"?: (number & {}) | undefined;
        "$required-columnGap"?: (number & {}) | undefined;
        "$required-rowGap"?: (number & {}) | undefined;
        "$required-margin"?: import("react-native").DimensionValue | undefined;
        "$required-marginTop"?: import("react-native").DimensionValue | undefined;
        "$required-marginRight"?: import("react-native").DimensionValue | undefined;
        "$required-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$required-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$required-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$required-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$required-padding"?: import("react-native").DimensionValue | undefined;
        "$required-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$required-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$required-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$required-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$required-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$required-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$required-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$required-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$required-top"?: import("react-native").DimensionValue | undefined;
        "$required-right"?: import("react-native").DimensionValue | undefined;
        "$required-bottom"?: import("react-native").DimensionValue | undefined;
        "$required-left"?: import("react-native").DimensionValue | undefined;
        "$required-shadowRadius"?: (number & {}) | undefined;
        "$required-elevation"?: (number & {}) | undefined;
        "$required-backgroundColor"?: (string & {}) | undefined;
        "$required-borderBottomColor"?: (string & {}) | undefined;
        "$required-borderColor"?: (string & {}) | undefined;
        "$required-borderLeftColor"?: (string & {}) | undefined;
        "$required-borderRightColor"?: (string & {}) | undefined;
        "$required-borderTopColor"?: (string & {}) | undefined;
        "$required-shadowColor"?: (string & {}) | undefined;
        "$required-borderBlockColor"?: (string & {}) | undefined;
        "$required-borderBlockEndColor"?: (string & {}) | undefined;
        "$required-borderBlockStartColor"?: (string & {}) | undefined;
        "$required-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-width"?: unknown;
        "$required-minWidth"?: unknown;
        "$required-maxWidth"?: unknown;
        "$required-height"?: unknown;
        "$required-minHeight"?: unknown;
        "$required-maxHeight"?: unknown;
        "$required-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$required-borderWidth"?: (number & {}) | undefined;
        "$required-borderTopWidth"?: (number & {}) | undefined;
        "$required-borderRightWidth"?: (number & {}) | undefined;
        "$required-borderBottomWidth"?: (number & {}) | undefined;
        "$required-borderLeftWidth"?: (number & {}) | undefined;
        "$required-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$required-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-zIndex"?: number | undefined;
        "$required-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$required-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$required-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$required-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$required-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$required-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$required-aspectRatio"?: string | number | undefined;
        "$required-borderEndWidth"?: number | undefined;
        "$required-borderStartWidth"?: number | undefined;
        "$required-display"?: "flex" | "none" | undefined;
        "$required-end"?: import("react-native").DimensionValue | undefined;
        "$required-flex"?: number | undefined;
        "$required-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$required-flexGrow"?: number | undefined;
        "$required-flexShrink"?: number | undefined;
        "$required-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$required-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$required-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$required-marginStart"?: import("react-native").DimensionValue | undefined;
        "$required-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$required-position"?: "absolute" | "relative" | undefined;
        "$required-start"?: import("react-native").DimensionValue | undefined;
        "$required-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$required-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$required-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$required-transformMatrix"?: number[] | undefined;
        "$required-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$required-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$required-borderCurve"?: "circular" | "continuous" | undefined;
        "$invalid-gap"?: (number & {}) | undefined;
        "$invalid-columnGap"?: (number & {}) | undefined;
        "$invalid-rowGap"?: (number & {}) | undefined;
        "$invalid-margin"?: import("react-native").DimensionValue | undefined;
        "$invalid-marginTop"?: import("react-native").DimensionValue | undefined;
        "$invalid-marginRight"?: import("react-native").DimensionValue | undefined;
        "$invalid-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$invalid-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$invalid-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$invalid-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$invalid-padding"?: import("react-native").DimensionValue | undefined;
        "$invalid-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$invalid-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$invalid-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$invalid-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$invalid-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$invalid-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$invalid-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$invalid-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$invalid-top"?: import("react-native").DimensionValue | undefined;
        "$invalid-right"?: import("react-native").DimensionValue | undefined;
        "$invalid-bottom"?: import("react-native").DimensionValue | undefined;
        "$invalid-left"?: import("react-native").DimensionValue | undefined;
        "$invalid-shadowRadius"?: (number & {}) | undefined;
        "$invalid-elevation"?: (number & {}) | undefined;
        "$invalid-backgroundColor"?: (string & {}) | undefined;
        "$invalid-borderBottomColor"?: (string & {}) | undefined;
        "$invalid-borderColor"?: (string & {}) | undefined;
        "$invalid-borderLeftColor"?: (string & {}) | undefined;
        "$invalid-borderRightColor"?: (string & {}) | undefined;
        "$invalid-borderTopColor"?: (string & {}) | undefined;
        "$invalid-shadowColor"?: (string & {}) | undefined;
        "$invalid-borderBlockColor"?: (string & {}) | undefined;
        "$invalid-borderBlockEndColor"?: (string & {}) | undefined;
        "$invalid-borderBlockStartColor"?: (string & {}) | undefined;
        "$invalid-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-width"?: unknown;
        "$invalid-minWidth"?: unknown;
        "$invalid-maxWidth"?: unknown;
        "$invalid-height"?: unknown;
        "$invalid-minHeight"?: unknown;
        "$invalid-maxHeight"?: unknown;
        "$invalid-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$invalid-borderWidth"?: (number & {}) | undefined;
        "$invalid-borderTopWidth"?: (number & {}) | undefined;
        "$invalid-borderRightWidth"?: (number & {}) | undefined;
        "$invalid-borderBottomWidth"?: (number & {}) | undefined;
        "$invalid-borderLeftWidth"?: (number & {}) | undefined;
        "$invalid-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$invalid-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-zIndex"?: number | undefined;
        "$invalid-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$invalid-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$invalid-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$invalid-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$invalid-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$invalid-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$invalid-aspectRatio"?: string | number | undefined;
        "$invalid-borderEndWidth"?: number | undefined;
        "$invalid-borderStartWidth"?: number | undefined;
        "$invalid-display"?: "flex" | "none" | undefined;
        "$invalid-end"?: import("react-native").DimensionValue | undefined;
        "$invalid-flex"?: number | undefined;
        "$invalid-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$invalid-flexGrow"?: number | undefined;
        "$invalid-flexShrink"?: number | undefined;
        "$invalid-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$invalid-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$invalid-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$invalid-marginStart"?: import("react-native").DimensionValue | undefined;
        "$invalid-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$invalid-position"?: "absolute" | "relative" | undefined;
        "$invalid-start"?: import("react-native").DimensionValue | undefined;
        "$invalid-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$invalid-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$invalid-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$invalid-transformMatrix"?: number[] | undefined;
        "$invalid-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$invalid-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$invalid-borderCurve"?: "circular" | "continuous" | undefined;
        "$focus-gap"?: (number & {}) | undefined;
        "$focus-columnGap"?: (number & {}) | undefined;
        "$focus-rowGap"?: (number & {}) | undefined;
        "$focus-margin"?: import("react-native").DimensionValue | undefined;
        "$focus-marginTop"?: import("react-native").DimensionValue | undefined;
        "$focus-marginRight"?: import("react-native").DimensionValue | undefined;
        "$focus-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$focus-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$focus-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$focus-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$focus-padding"?: import("react-native").DimensionValue | undefined;
        "$focus-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$focus-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$focus-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$focus-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$focus-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$focus-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$focus-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$focus-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$focus-top"?: import("react-native").DimensionValue | undefined;
        "$focus-right"?: import("react-native").DimensionValue | undefined;
        "$focus-bottom"?: import("react-native").DimensionValue | undefined;
        "$focus-left"?: import("react-native").DimensionValue | undefined;
        "$focus-shadowRadius"?: (number & {}) | undefined;
        "$focus-elevation"?: (number & {}) | undefined;
        "$focus-backgroundColor"?: (string & {}) | undefined;
        "$focus-borderBottomColor"?: (string & {}) | undefined;
        "$focus-borderColor"?: (string & {}) | undefined;
        "$focus-borderLeftColor"?: (string & {}) | undefined;
        "$focus-borderRightColor"?: (string & {}) | undefined;
        "$focus-borderTopColor"?: (string & {}) | undefined;
        "$focus-shadowColor"?: (string & {}) | undefined;
        "$focus-borderBlockColor"?: (string & {}) | undefined;
        "$focus-borderBlockEndColor"?: (string & {}) | undefined;
        "$focus-borderBlockStartColor"?: (string & {}) | undefined;
        "$focus-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-width"?: unknown;
        "$focus-minWidth"?: unknown;
        "$focus-maxWidth"?: unknown;
        "$focus-height"?: unknown;
        "$focus-minHeight"?: unknown;
        "$focus-maxHeight"?: unknown;
        "$focus-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$focus-borderWidth"?: (number & {}) | undefined;
        "$focus-borderTopWidth"?: (number & {}) | undefined;
        "$focus-borderRightWidth"?: (number & {}) | undefined;
        "$focus-borderBottomWidth"?: (number & {}) | undefined;
        "$focus-borderLeftWidth"?: (number & {}) | undefined;
        "$focus-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$focus-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-zIndex"?: number | undefined;
        "$focus-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$focus-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$focus-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$focus-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$focus-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$focus-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$focus-aspectRatio"?: string | number | undefined;
        "$focus-borderEndWidth"?: number | undefined;
        "$focus-borderStartWidth"?: number | undefined;
        "$focus-display"?: "flex" | "none" | undefined;
        "$focus-end"?: import("react-native").DimensionValue | undefined;
        "$focus-flex"?: number | undefined;
        "$focus-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$focus-flexGrow"?: number | undefined;
        "$focus-flexShrink"?: number | undefined;
        "$focus-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$focus-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$focus-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$focus-marginStart"?: import("react-native").DimensionValue | undefined;
        "$focus-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$focus-position"?: "absolute" | "relative" | undefined;
        "$focus-start"?: import("react-native").DimensionValue | undefined;
        "$focus-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$focus-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$focus-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$focus-transformMatrix"?: number[] | undefined;
        "$focus-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$focus-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$focus-borderCurve"?: "circular" | "continuous" | undefined;
        "$focusVisible-gap"?: (number & {}) | undefined;
        "$focusVisible-columnGap"?: (number & {}) | undefined;
        "$focusVisible-rowGap"?: (number & {}) | undefined;
        "$focusVisible-margin"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-marginTop"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-marginRight"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-padding"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-top"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-right"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-bottom"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-left"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-shadowRadius"?: (number & {}) | undefined;
        "$focusVisible-elevation"?: (number & {}) | undefined;
        "$focusVisible-backgroundColor"?: (string & {}) | undefined;
        "$focusVisible-borderBottomColor"?: (string & {}) | undefined;
        "$focusVisible-borderColor"?: (string & {}) | undefined;
        "$focusVisible-borderLeftColor"?: (string & {}) | undefined;
        "$focusVisible-borderRightColor"?: (string & {}) | undefined;
        "$focusVisible-borderTopColor"?: (string & {}) | undefined;
        "$focusVisible-shadowColor"?: (string & {}) | undefined;
        "$focusVisible-borderBlockColor"?: (string & {}) | undefined;
        "$focusVisible-borderBlockEndColor"?: (string & {}) | undefined;
        "$focusVisible-borderBlockStartColor"?: (string & {}) | undefined;
        "$focusVisible-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-width"?: unknown;
        "$focusVisible-minWidth"?: unknown;
        "$focusVisible-maxWidth"?: unknown;
        "$focusVisible-height"?: unknown;
        "$focusVisible-minHeight"?: unknown;
        "$focusVisible-maxHeight"?: unknown;
        "$focusVisible-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-borderWidth"?: (number & {}) | undefined;
        "$focusVisible-borderTopWidth"?: (number & {}) | undefined;
        "$focusVisible-borderRightWidth"?: (number & {}) | undefined;
        "$focusVisible-borderBottomWidth"?: (number & {}) | undefined;
        "$focusVisible-borderLeftWidth"?: (number & {}) | undefined;
        "$focusVisible-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$focusVisible-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-zIndex"?: number | undefined;
        "$focusVisible-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$focusVisible-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$focusVisible-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$focusVisible-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$focusVisible-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$focusVisible-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$focusVisible-aspectRatio"?: string | number | undefined;
        "$focusVisible-borderEndWidth"?: number | undefined;
        "$focusVisible-borderStartWidth"?: number | undefined;
        "$focusVisible-display"?: "flex" | "none" | undefined;
        "$focusVisible-end"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-flex"?: number | undefined;
        "$focusVisible-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$focusVisible-flexGrow"?: number | undefined;
        "$focusVisible-flexShrink"?: number | undefined;
        "$focusVisible-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$focusVisible-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$focusVisible-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-marginStart"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$focusVisible-position"?: "absolute" | "relative" | undefined;
        "$focusVisible-start"?: import("react-native").DimensionValue | undefined;
        "$focusVisible-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$focusVisible-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$focusVisible-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$focusVisible-transformMatrix"?: number[] | undefined;
        "$focusVisible-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$focusVisible-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$focusVisible-borderCurve"?: "circular" | "continuous" | undefined;
        "$hover-gap"?: (number & {}) | undefined;
        "$hover-columnGap"?: (number & {}) | undefined;
        "$hover-rowGap"?: (number & {}) | undefined;
        "$hover-margin"?: import("react-native").DimensionValue | undefined;
        "$hover-marginTop"?: import("react-native").DimensionValue | undefined;
        "$hover-marginRight"?: import("react-native").DimensionValue | undefined;
        "$hover-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$hover-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$hover-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$hover-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$hover-padding"?: import("react-native").DimensionValue | undefined;
        "$hover-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$hover-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$hover-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$hover-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$hover-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$hover-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$hover-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$hover-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$hover-top"?: import("react-native").DimensionValue | undefined;
        "$hover-right"?: import("react-native").DimensionValue | undefined;
        "$hover-bottom"?: import("react-native").DimensionValue | undefined;
        "$hover-left"?: import("react-native").DimensionValue | undefined;
        "$hover-shadowRadius"?: (number & {}) | undefined;
        "$hover-elevation"?: (number & {}) | undefined;
        "$hover-backgroundColor"?: (string & {}) | undefined;
        "$hover-borderBottomColor"?: (string & {}) | undefined;
        "$hover-borderColor"?: (string & {}) | undefined;
        "$hover-borderLeftColor"?: (string & {}) | undefined;
        "$hover-borderRightColor"?: (string & {}) | undefined;
        "$hover-borderTopColor"?: (string & {}) | undefined;
        "$hover-shadowColor"?: (string & {}) | undefined;
        "$hover-borderBlockColor"?: (string & {}) | undefined;
        "$hover-borderBlockEndColor"?: (string & {}) | undefined;
        "$hover-borderBlockStartColor"?: (string & {}) | undefined;
        "$hover-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-width"?: unknown;
        "$hover-minWidth"?: unknown;
        "$hover-maxWidth"?: unknown;
        "$hover-height"?: unknown;
        "$hover-minHeight"?: unknown;
        "$hover-maxHeight"?: unknown;
        "$hover-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$hover-borderWidth"?: (number & {}) | undefined;
        "$hover-borderTopWidth"?: (number & {}) | undefined;
        "$hover-borderRightWidth"?: (number & {}) | undefined;
        "$hover-borderBottomWidth"?: (number & {}) | undefined;
        "$hover-borderLeftWidth"?: (number & {}) | undefined;
        "$hover-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$hover-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-zIndex"?: number | undefined;
        "$hover-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$hover-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$hover-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$hover-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$hover-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$hover-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$hover-aspectRatio"?: string | number | undefined;
        "$hover-borderEndWidth"?: number | undefined;
        "$hover-borderStartWidth"?: number | undefined;
        "$hover-display"?: "flex" | "none" | undefined;
        "$hover-end"?: import("react-native").DimensionValue | undefined;
        "$hover-flex"?: number | undefined;
        "$hover-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$hover-flexGrow"?: number | undefined;
        "$hover-flexShrink"?: number | undefined;
        "$hover-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$hover-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$hover-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$hover-marginStart"?: import("react-native").DimensionValue | undefined;
        "$hover-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$hover-position"?: "absolute" | "relative" | undefined;
        "$hover-start"?: import("react-native").DimensionValue | undefined;
        "$hover-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$hover-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$hover-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$hover-transformMatrix"?: number[] | undefined;
        "$hover-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$hover-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$hover-borderCurve"?: "circular" | "continuous" | undefined;
        "$pressed-gap"?: (number & {}) | undefined;
        "$pressed-columnGap"?: (number & {}) | undefined;
        "$pressed-rowGap"?: (number & {}) | undefined;
        "$pressed-margin"?: import("react-native").DimensionValue | undefined;
        "$pressed-marginTop"?: import("react-native").DimensionValue | undefined;
        "$pressed-marginRight"?: import("react-native").DimensionValue | undefined;
        "$pressed-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$pressed-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$pressed-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$pressed-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$pressed-padding"?: import("react-native").DimensionValue | undefined;
        "$pressed-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$pressed-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$pressed-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$pressed-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$pressed-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$pressed-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$pressed-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$pressed-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$pressed-top"?: import("react-native").DimensionValue | undefined;
        "$pressed-right"?: import("react-native").DimensionValue | undefined;
        "$pressed-bottom"?: import("react-native").DimensionValue | undefined;
        "$pressed-left"?: import("react-native").DimensionValue | undefined;
        "$pressed-shadowRadius"?: (number & {}) | undefined;
        "$pressed-elevation"?: (number & {}) | undefined;
        "$pressed-backgroundColor"?: (string & {}) | undefined;
        "$pressed-borderBottomColor"?: (string & {}) | undefined;
        "$pressed-borderColor"?: (string & {}) | undefined;
        "$pressed-borderLeftColor"?: (string & {}) | undefined;
        "$pressed-borderRightColor"?: (string & {}) | undefined;
        "$pressed-borderTopColor"?: (string & {}) | undefined;
        "$pressed-shadowColor"?: (string & {}) | undefined;
        "$pressed-borderBlockColor"?: (string & {}) | undefined;
        "$pressed-borderBlockEndColor"?: (string & {}) | undefined;
        "$pressed-borderBlockStartColor"?: (string & {}) | undefined;
        "$pressed-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-width"?: unknown;
        "$pressed-minWidth"?: unknown;
        "$pressed-maxWidth"?: unknown;
        "$pressed-height"?: unknown;
        "$pressed-minHeight"?: unknown;
        "$pressed-maxHeight"?: unknown;
        "$pressed-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$pressed-borderWidth"?: (number & {}) | undefined;
        "$pressed-borderTopWidth"?: (number & {}) | undefined;
        "$pressed-borderRightWidth"?: (number & {}) | undefined;
        "$pressed-borderBottomWidth"?: (number & {}) | undefined;
        "$pressed-borderLeftWidth"?: (number & {}) | undefined;
        "$pressed-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$pressed-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-zIndex"?: number | undefined;
        "$pressed-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$pressed-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$pressed-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$pressed-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$pressed-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$pressed-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$pressed-aspectRatio"?: string | number | undefined;
        "$pressed-borderEndWidth"?: number | undefined;
        "$pressed-borderStartWidth"?: number | undefined;
        "$pressed-display"?: "flex" | "none" | undefined;
        "$pressed-end"?: import("react-native").DimensionValue | undefined;
        "$pressed-flex"?: number | undefined;
        "$pressed-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$pressed-flexGrow"?: number | undefined;
        "$pressed-flexShrink"?: number | undefined;
        "$pressed-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$pressed-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$pressed-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$pressed-marginStart"?: import("react-native").DimensionValue | undefined;
        "$pressed-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$pressed-position"?: "absolute" | "relative" | undefined;
        "$pressed-start"?: import("react-native").DimensionValue | undefined;
        "$pressed-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$pressed-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$pressed-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$pressed-transformMatrix"?: number[] | undefined;
        "$pressed-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$pressed-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$pressed-borderCurve"?: "circular" | "continuous" | undefined;
        "$active-gap"?: (number & {}) | undefined;
        "$active-columnGap"?: (number & {}) | undefined;
        "$active-rowGap"?: (number & {}) | undefined;
        "$active-margin"?: import("react-native").DimensionValue | undefined;
        "$active-marginTop"?: import("react-native").DimensionValue | undefined;
        "$active-marginRight"?: import("react-native").DimensionValue | undefined;
        "$active-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$active-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$active-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$active-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$active-padding"?: import("react-native").DimensionValue | undefined;
        "$active-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$active-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$active-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$active-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$active-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$active-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$active-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$active-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$active-top"?: import("react-native").DimensionValue | undefined;
        "$active-right"?: import("react-native").DimensionValue | undefined;
        "$active-bottom"?: import("react-native").DimensionValue | undefined;
        "$active-left"?: import("react-native").DimensionValue | undefined;
        "$active-shadowRadius"?: (number & {}) | undefined;
        "$active-elevation"?: (number & {}) | undefined;
        "$active-backgroundColor"?: (string & {}) | undefined;
        "$active-borderBottomColor"?: (string & {}) | undefined;
        "$active-borderColor"?: (string & {}) | undefined;
        "$active-borderLeftColor"?: (string & {}) | undefined;
        "$active-borderRightColor"?: (string & {}) | undefined;
        "$active-borderTopColor"?: (string & {}) | undefined;
        "$active-shadowColor"?: (string & {}) | undefined;
        "$active-borderBlockColor"?: (string & {}) | undefined;
        "$active-borderBlockEndColor"?: (string & {}) | undefined;
        "$active-borderBlockStartColor"?: (string & {}) | undefined;
        "$active-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-width"?: unknown;
        "$active-minWidth"?: unknown;
        "$active-maxWidth"?: unknown;
        "$active-height"?: unknown;
        "$active-minHeight"?: unknown;
        "$active-maxHeight"?: unknown;
        "$active-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$active-borderWidth"?: (number & {}) | undefined;
        "$active-borderTopWidth"?: (number & {}) | undefined;
        "$active-borderRightWidth"?: (number & {}) | undefined;
        "$active-borderBottomWidth"?: (number & {}) | undefined;
        "$active-borderLeftWidth"?: (number & {}) | undefined;
        "$active-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$active-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-zIndex"?: number | undefined;
        "$active-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$active-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$active-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$active-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$active-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$active-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$active-aspectRatio"?: string | number | undefined;
        "$active-borderEndWidth"?: number | undefined;
        "$active-borderStartWidth"?: number | undefined;
        "$active-display"?: "flex" | "none" | undefined;
        "$active-end"?: import("react-native").DimensionValue | undefined;
        "$active-flex"?: number | undefined;
        "$active-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$active-flexGrow"?: number | undefined;
        "$active-flexShrink"?: number | undefined;
        "$active-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$active-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$active-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$active-marginStart"?: import("react-native").DimensionValue | undefined;
        "$active-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$active-position"?: "absolute" | "relative" | undefined;
        "$active-start"?: import("react-native").DimensionValue | undefined;
        "$active-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$active-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$active-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$active-transformMatrix"?: number[] | undefined;
        "$active-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$active-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$active-borderCurve"?: "circular" | "continuous" | undefined;
        "$loading-gap"?: (number & {}) | undefined;
        "$loading-columnGap"?: (number & {}) | undefined;
        "$loading-rowGap"?: (number & {}) | undefined;
        "$loading-margin"?: import("react-native").DimensionValue | undefined;
        "$loading-marginTop"?: import("react-native").DimensionValue | undefined;
        "$loading-marginRight"?: import("react-native").DimensionValue | undefined;
        "$loading-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$loading-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$loading-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$loading-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$loading-padding"?: import("react-native").DimensionValue | undefined;
        "$loading-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$loading-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$loading-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$loading-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$loading-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$loading-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$loading-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$loading-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$loading-top"?: import("react-native").DimensionValue | undefined;
        "$loading-right"?: import("react-native").DimensionValue | undefined;
        "$loading-bottom"?: import("react-native").DimensionValue | undefined;
        "$loading-left"?: import("react-native").DimensionValue | undefined;
        "$loading-shadowRadius"?: (number & {}) | undefined;
        "$loading-elevation"?: (number & {}) | undefined;
        "$loading-backgroundColor"?: (string & {}) | undefined;
        "$loading-borderBottomColor"?: (string & {}) | undefined;
        "$loading-borderColor"?: (string & {}) | undefined;
        "$loading-borderLeftColor"?: (string & {}) | undefined;
        "$loading-borderRightColor"?: (string & {}) | undefined;
        "$loading-borderTopColor"?: (string & {}) | undefined;
        "$loading-shadowColor"?: (string & {}) | undefined;
        "$loading-borderBlockColor"?: (string & {}) | undefined;
        "$loading-borderBlockEndColor"?: (string & {}) | undefined;
        "$loading-borderBlockStartColor"?: (string & {}) | undefined;
        "$loading-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-width"?: unknown;
        "$loading-minWidth"?: unknown;
        "$loading-maxWidth"?: unknown;
        "$loading-height"?: unknown;
        "$loading-minHeight"?: unknown;
        "$loading-maxHeight"?: unknown;
        "$loading-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$loading-borderWidth"?: (number & {}) | undefined;
        "$loading-borderTopWidth"?: (number & {}) | undefined;
        "$loading-borderRightWidth"?: (number & {}) | undefined;
        "$loading-borderBottomWidth"?: (number & {}) | undefined;
        "$loading-borderLeftWidth"?: (number & {}) | undefined;
        "$loading-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$loading-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-zIndex"?: number | undefined;
        "$loading-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$loading-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$loading-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$loading-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$loading-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$loading-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$loading-aspectRatio"?: string | number | undefined;
        "$loading-borderEndWidth"?: number | undefined;
        "$loading-borderStartWidth"?: number | undefined;
        "$loading-display"?: "flex" | "none" | undefined;
        "$loading-end"?: import("react-native").DimensionValue | undefined;
        "$loading-flex"?: number | undefined;
        "$loading-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$loading-flexGrow"?: number | undefined;
        "$loading-flexShrink"?: number | undefined;
        "$loading-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$loading-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$loading-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$loading-marginStart"?: import("react-native").DimensionValue | undefined;
        "$loading-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$loading-position"?: "absolute" | "relative" | undefined;
        "$loading-start"?: import("react-native").DimensionValue | undefined;
        "$loading-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$loading-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$loading-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$loading-transformMatrix"?: number[] | undefined;
        "$loading-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$loading-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$loading-borderCurve"?: "circular" | "continuous" | undefined;
        "$disabled-gap"?: (number & {}) | undefined;
        "$disabled-columnGap"?: (number & {}) | undefined;
        "$disabled-rowGap"?: (number & {}) | undefined;
        "$disabled-margin"?: import("react-native").DimensionValue | undefined;
        "$disabled-marginTop"?: import("react-native").DimensionValue | undefined;
        "$disabled-marginRight"?: import("react-native").DimensionValue | undefined;
        "$disabled-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$disabled-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$disabled-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$disabled-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$disabled-padding"?: import("react-native").DimensionValue | undefined;
        "$disabled-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$disabled-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$disabled-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$disabled-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$disabled-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$disabled-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$disabled-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$disabled-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$disabled-top"?: import("react-native").DimensionValue | undefined;
        "$disabled-right"?: import("react-native").DimensionValue | undefined;
        "$disabled-bottom"?: import("react-native").DimensionValue | undefined;
        "$disabled-left"?: import("react-native").DimensionValue | undefined;
        "$disabled-shadowRadius"?: (number & {}) | undefined;
        "$disabled-elevation"?: (number & {}) | undefined;
        "$disabled-backgroundColor"?: (string & {}) | undefined;
        "$disabled-borderBottomColor"?: (string & {}) | undefined;
        "$disabled-borderColor"?: (string & {}) | undefined;
        "$disabled-borderLeftColor"?: (string & {}) | undefined;
        "$disabled-borderRightColor"?: (string & {}) | undefined;
        "$disabled-borderTopColor"?: (string & {}) | undefined;
        "$disabled-shadowColor"?: (string & {}) | undefined;
        "$disabled-borderBlockColor"?: (string & {}) | undefined;
        "$disabled-borderBlockEndColor"?: (string & {}) | undefined;
        "$disabled-borderBlockStartColor"?: (string & {}) | undefined;
        "$disabled-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-width"?: unknown;
        "$disabled-minWidth"?: unknown;
        "$disabled-maxWidth"?: unknown;
        "$disabled-height"?: unknown;
        "$disabled-minHeight"?: unknown;
        "$disabled-maxHeight"?: unknown;
        "$disabled-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$disabled-borderWidth"?: (number & {}) | undefined;
        "$disabled-borderTopWidth"?: (number & {}) | undefined;
        "$disabled-borderRightWidth"?: (number & {}) | undefined;
        "$disabled-borderBottomWidth"?: (number & {}) | undefined;
        "$disabled-borderLeftWidth"?: (number & {}) | undefined;
        "$disabled-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$disabled-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-zIndex"?: number | undefined;
        "$disabled-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$disabled-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$disabled-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$disabled-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$disabled-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$disabled-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$disabled-aspectRatio"?: string | number | undefined;
        "$disabled-borderEndWidth"?: number | undefined;
        "$disabled-borderStartWidth"?: number | undefined;
        "$disabled-display"?: "flex" | "none" | undefined;
        "$disabled-end"?: import("react-native").DimensionValue | undefined;
        "$disabled-flex"?: number | undefined;
        "$disabled-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$disabled-flexGrow"?: number | undefined;
        "$disabled-flexShrink"?: number | undefined;
        "$disabled-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$disabled-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$disabled-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$disabled-marginStart"?: import("react-native").DimensionValue | undefined;
        "$disabled-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$disabled-position"?: "absolute" | "relative" | undefined;
        "$disabled-start"?: import("react-native").DimensionValue | undefined;
        "$disabled-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$disabled-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$disabled-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$disabled-transformMatrix"?: number[] | undefined;
        "$disabled-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$disabled-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$disabled-borderCurve"?: "circular" | "continuous" | undefined;
        "$ios-gap"?: (number & {}) | undefined;
        "$ios-columnGap"?: (number & {}) | undefined;
        "$ios-rowGap"?: (number & {}) | undefined;
        "$ios-margin"?: import("react-native").DimensionValue | undefined;
        "$ios-marginTop"?: import("react-native").DimensionValue | undefined;
        "$ios-marginRight"?: import("react-native").DimensionValue | undefined;
        "$ios-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$ios-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$ios-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$ios-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$ios-padding"?: import("react-native").DimensionValue | undefined;
        "$ios-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$ios-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$ios-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$ios-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$ios-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$ios-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$ios-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$ios-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$ios-top"?: import("react-native").DimensionValue | undefined;
        "$ios-right"?: import("react-native").DimensionValue | undefined;
        "$ios-bottom"?: import("react-native").DimensionValue | undefined;
        "$ios-left"?: import("react-native").DimensionValue | undefined;
        "$ios-shadowRadius"?: (number & {}) | undefined;
        "$ios-elevation"?: (number & {}) | undefined;
        "$ios-backgroundColor"?: (string & {}) | undefined;
        "$ios-borderBottomColor"?: (string & {}) | undefined;
        "$ios-borderColor"?: (string & {}) | undefined;
        "$ios-borderLeftColor"?: (string & {}) | undefined;
        "$ios-borderRightColor"?: (string & {}) | undefined;
        "$ios-borderTopColor"?: (string & {}) | undefined;
        "$ios-shadowColor"?: (string & {}) | undefined;
        "$ios-borderBlockColor"?: (string & {}) | undefined;
        "$ios-borderBlockEndColor"?: (string & {}) | undefined;
        "$ios-borderBlockStartColor"?: (string & {}) | undefined;
        "$ios-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-width"?: unknown;
        "$ios-minWidth"?: unknown;
        "$ios-maxWidth"?: unknown;
        "$ios-height"?: unknown;
        "$ios-minHeight"?: unknown;
        "$ios-maxHeight"?: unknown;
        "$ios-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$ios-borderWidth"?: (number & {}) | undefined;
        "$ios-borderTopWidth"?: (number & {}) | undefined;
        "$ios-borderRightWidth"?: (number & {}) | undefined;
        "$ios-borderBottomWidth"?: (number & {}) | undefined;
        "$ios-borderLeftWidth"?: (number & {}) | undefined;
        "$ios-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$ios-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-zIndex"?: number | undefined;
        "$ios-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$ios-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$ios-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$ios-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$ios-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$ios-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$ios-aspectRatio"?: string | number | undefined;
        "$ios-borderEndWidth"?: number | undefined;
        "$ios-borderStartWidth"?: number | undefined;
        "$ios-display"?: "flex" | "none" | undefined;
        "$ios-end"?: import("react-native").DimensionValue | undefined;
        "$ios-flex"?: number | undefined;
        "$ios-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$ios-flexGrow"?: number | undefined;
        "$ios-flexShrink"?: number | undefined;
        "$ios-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$ios-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$ios-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$ios-marginStart"?: import("react-native").DimensionValue | undefined;
        "$ios-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$ios-position"?: "absolute" | "relative" | undefined;
        "$ios-start"?: import("react-native").DimensionValue | undefined;
        "$ios-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$ios-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$ios-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$ios-transformMatrix"?: number[] | undefined;
        "$ios-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$ios-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$ios-borderCurve"?: "circular" | "continuous" | undefined;
        "$android-gap"?: (number & {}) | undefined;
        "$android-columnGap"?: (number & {}) | undefined;
        "$android-rowGap"?: (number & {}) | undefined;
        "$android-margin"?: import("react-native").DimensionValue | undefined;
        "$android-marginTop"?: import("react-native").DimensionValue | undefined;
        "$android-marginRight"?: import("react-native").DimensionValue | undefined;
        "$android-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$android-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$android-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$android-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$android-padding"?: import("react-native").DimensionValue | undefined;
        "$android-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$android-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$android-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$android-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$android-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$android-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$android-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$android-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$android-top"?: import("react-native").DimensionValue | undefined;
        "$android-right"?: import("react-native").DimensionValue | undefined;
        "$android-bottom"?: import("react-native").DimensionValue | undefined;
        "$android-left"?: import("react-native").DimensionValue | undefined;
        "$android-shadowRadius"?: (number & {}) | undefined;
        "$android-elevation"?: (number & {}) | undefined;
        "$android-backgroundColor"?: (string & {}) | undefined;
        "$android-borderBottomColor"?: (string & {}) | undefined;
        "$android-borderColor"?: (string & {}) | undefined;
        "$android-borderLeftColor"?: (string & {}) | undefined;
        "$android-borderRightColor"?: (string & {}) | undefined;
        "$android-borderTopColor"?: (string & {}) | undefined;
        "$android-shadowColor"?: (string & {}) | undefined;
        "$android-borderBlockColor"?: (string & {}) | undefined;
        "$android-borderBlockEndColor"?: (string & {}) | undefined;
        "$android-borderBlockStartColor"?: (string & {}) | undefined;
        "$android-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-width"?: unknown;
        "$android-minWidth"?: unknown;
        "$android-maxWidth"?: unknown;
        "$android-height"?: unknown;
        "$android-minHeight"?: unknown;
        "$android-maxHeight"?: unknown;
        "$android-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$android-borderWidth"?: (number & {}) | undefined;
        "$android-borderTopWidth"?: (number & {}) | undefined;
        "$android-borderRightWidth"?: (number & {}) | undefined;
        "$android-borderBottomWidth"?: (number & {}) | undefined;
        "$android-borderLeftWidth"?: (number & {}) | undefined;
        "$android-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$android-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-zIndex"?: number | undefined;
        "$android-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$android-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$android-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$android-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$android-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$android-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$android-aspectRatio"?: string | number | undefined;
        "$android-borderEndWidth"?: number | undefined;
        "$android-borderStartWidth"?: number | undefined;
        "$android-display"?: "flex" | "none" | undefined;
        "$android-end"?: import("react-native").DimensionValue | undefined;
        "$android-flex"?: number | undefined;
        "$android-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$android-flexGrow"?: number | undefined;
        "$android-flexShrink"?: number | undefined;
        "$android-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$android-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$android-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$android-marginStart"?: import("react-native").DimensionValue | undefined;
        "$android-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$android-position"?: "absolute" | "relative" | undefined;
        "$android-start"?: import("react-native").DimensionValue | undefined;
        "$android-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$android-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$android-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$android-transformMatrix"?: number[] | undefined;
        "$android-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$android-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$android-borderCurve"?: "circular" | "continuous" | undefined;
        "$web-gap"?: (string & {}) | undefined;
        "$web-columnGap"?: (string & {}) | undefined;
        "$web-rowGap"?: (string & {}) | undefined;
        "$web-margin"?: (string & {}) | undefined;
        "$web-marginTop"?: (string & {}) | undefined;
        "$web-marginRight"?: (string & {}) | undefined;
        "$web-marginBottom"?: (string & {}) | undefined;
        "$web-marginLeft"?: (string & {}) | undefined;
        "$web-marginHorizontal"?: (string & {}) | undefined;
        "$web-marginVertical"?: (string & {}) | undefined;
        "$web-padding"?: (string & {}) | undefined;
        "$web-paddingTop"?: (string & {}) | undefined;
        "$web-paddingRight"?: (string & {}) | undefined;
        "$web-paddingBottom"?: (string & {}) | undefined;
        "$web-paddingLeft"?: (string & {}) | undefined;
        "$web-paddingHorizontal"?: (string & {}) | undefined;
        "$web-paddingVertical"?: (string & {}) | undefined;
        "$web-paddingStart"?: (string & {}) | undefined;
        "$web-paddingEnd"?: (string & {}) | undefined;
        "$web-top"?: (string & {}) | undefined;
        "$web-right"?: (string & {}) | undefined;
        "$web-bottom"?: (string & {}) | undefined;
        "$web-left"?: (string & {}) | undefined;
        "$web-shadowRadius"?: (string & {}) | undefined;
        "$web-elevation"?: (string & {}) | undefined;
        "$web-backgroundColor"?: (string & {}) | undefined;
        "$web-borderBottomColor"?: (string & {}) | undefined;
        "$web-borderColor"?: (string & {}) | undefined;
        "$web-borderLeftColor"?: (string & {}) | undefined;
        "$web-borderRightColor"?: (string & {}) | undefined;
        "$web-borderTopColor"?: (string & {}) | undefined;
        "$web-shadowColor"?: (string & {}) | undefined;
        "$web-borderBlockColor"?: (string & {}) | undefined;
        "$web-borderBlockEndColor"?: (string & {}) | undefined;
        "$web-borderBlockStartColor"?: (string & {}) | undefined;
        "$web-borderEndEndRadius"?: (string & {}) | import("react-native").AnimatableNumericValue | undefined;
        "$web-borderStartStartRadius"?: (string & {}) | import("react-native").AnimatableNumericValue | undefined;
        "$web-borderStartEndRadius"?: (string & {}) | import("react-native").AnimatableNumericValue | undefined;
        "$web-borderEndStartRadius"?: (string & {}) | import("react-native").AnimatableNumericValue | undefined;
        "$web-shadowOpacity"?: (string & {}) | import("react-native").AnimatableNumericValue | undefined;
        "$web-opacity"?: (string & {}) | import("react-native").AnimatableNumericValue | undefined;
        "$web-width"?: (string & {}) | undefined;
        "$web-minWidth"?: (string & {}) | undefined;
        "$web-maxWidth"?: (string & {}) | undefined;
        "$web-height"?: (string & {}) | undefined;
        "$web-minHeight"?: (string & {}) | undefined;
        "$web-maxHeight"?: (string & {}) | undefined;
        "$web-flexBasis"?: (string & {}) | undefined;
        "$web-borderWidth"?: (string & {}) | (number & {}) | undefined;
        "$web-borderTopWidth"?: (string & {}) | (number & {}) | undefined;
        "$web-borderRightWidth"?: (string & {}) | (number & {}) | undefined;
        "$web-borderBottomWidth"?: (string & {}) | (number & {}) | undefined;
        "$web-borderLeftWidth"?: (string & {}) | (number & {}) | undefined;
        "$web-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$web-borderRadius"?: (string & {}) | import("react-native").AnimatableNumericValue | undefined;
        "$web-borderTopLeftRadius"?: (string & {}) | import("react-native").AnimatableNumericValue | undefined;
        "$web-borderTopRightRadius"?: (string & {}) | import("react-native").AnimatableNumericValue | undefined;
        "$web-borderBottomRightRadius"?: (string & {}) | import("react-native").AnimatableNumericValue | undefined;
        "$web-borderBottomLeftRadius"?: (string & {}) | import("react-native").AnimatableNumericValue | undefined;
        "$web-zIndex"?: number | undefined;
        "$web-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$web-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$web-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$web-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$web-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$web-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$web-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$web-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$web-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$web-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$web-aspectRatio"?: string | number | undefined;
        "$web-borderEndWidth"?: number | undefined;
        "$web-borderStartWidth"?: number | undefined;
        "$web-display"?: "flex" | "none" | undefined;
        "$web-end"?: import("react-native").DimensionValue | undefined;
        "$web-flex"?: number | undefined;
        "$web-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$web-flexGrow"?: number | undefined;
        "$web-flexShrink"?: number | undefined;
        "$web-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$web-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$web-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$web-marginStart"?: import("react-native").DimensionValue | undefined;
        "$web-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$web-position"?: "absolute" | "relative" | undefined;
        "$web-start"?: import("react-native").DimensionValue | undefined;
        "$web-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$web-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$web-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$web-transformMatrix"?: number[] | undefined;
        "$web-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$web-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$web-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$web-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$web-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$web-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$web-borderCurve"?: "circular" | "continuous" | undefined;
        "$dark-gap"?: (number & {}) | undefined;
        "$dark-columnGap"?: (number & {}) | undefined;
        "$dark-rowGap"?: (number & {}) | undefined;
        "$dark-margin"?: import("react-native").DimensionValue | undefined;
        "$dark-marginTop"?: import("react-native").DimensionValue | undefined;
        "$dark-marginRight"?: import("react-native").DimensionValue | undefined;
        "$dark-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$dark-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$dark-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$dark-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$dark-padding"?: import("react-native").DimensionValue | undefined;
        "$dark-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$dark-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$dark-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$dark-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$dark-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$dark-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$dark-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$dark-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$dark-top"?: import("react-native").DimensionValue | undefined;
        "$dark-right"?: import("react-native").DimensionValue | undefined;
        "$dark-bottom"?: import("react-native").DimensionValue | undefined;
        "$dark-left"?: import("react-native").DimensionValue | undefined;
        "$dark-shadowRadius"?: (number & {}) | undefined;
        "$dark-elevation"?: (number & {}) | undefined;
        "$dark-backgroundColor"?: (string & {}) | undefined;
        "$dark-borderBottomColor"?: (string & {}) | undefined;
        "$dark-borderColor"?: (string & {}) | undefined;
        "$dark-borderLeftColor"?: (string & {}) | undefined;
        "$dark-borderRightColor"?: (string & {}) | undefined;
        "$dark-borderTopColor"?: (string & {}) | undefined;
        "$dark-shadowColor"?: (string & {}) | undefined;
        "$dark-borderBlockColor"?: (string & {}) | undefined;
        "$dark-borderBlockEndColor"?: (string & {}) | undefined;
        "$dark-borderBlockStartColor"?: (string & {}) | undefined;
        "$dark-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-width"?: unknown;
        "$dark-minWidth"?: unknown;
        "$dark-maxWidth"?: unknown;
        "$dark-height"?: unknown;
        "$dark-minHeight"?: unknown;
        "$dark-maxHeight"?: unknown;
        "$dark-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$dark-borderWidth"?: (number & {}) | undefined;
        "$dark-borderTopWidth"?: (number & {}) | undefined;
        "$dark-borderRightWidth"?: (number & {}) | undefined;
        "$dark-borderBottomWidth"?: (number & {}) | undefined;
        "$dark-borderLeftWidth"?: (number & {}) | undefined;
        "$dark-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$dark-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-zIndex"?: number | undefined;
        "$dark-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$dark-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$dark-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$dark-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$dark-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$dark-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$dark-aspectRatio"?: string | number | undefined;
        "$dark-borderEndWidth"?: number | undefined;
        "$dark-borderStartWidth"?: number | undefined;
        "$dark-display"?: "flex" | "none" | undefined;
        "$dark-end"?: import("react-native").DimensionValue | undefined;
        "$dark-flex"?: number | undefined;
        "$dark-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$dark-flexGrow"?: number | undefined;
        "$dark-flexShrink"?: number | undefined;
        "$dark-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$dark-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$dark-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$dark-marginStart"?: import("react-native").DimensionValue | undefined;
        "$dark-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$dark-position"?: "absolute" | "relative" | undefined;
        "$dark-start"?: import("react-native").DimensionValue | undefined;
        "$dark-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$dark-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$dark-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$dark-transformMatrix"?: number[] | undefined;
        "$dark-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$dark-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$dark-borderCurve"?: "circular" | "continuous" | undefined;
        "$light-gap"?: (number & {}) | undefined;
        "$light-columnGap"?: (number & {}) | undefined;
        "$light-rowGap"?: (number & {}) | undefined;
        "$light-margin"?: import("react-native").DimensionValue | undefined;
        "$light-marginTop"?: import("react-native").DimensionValue | undefined;
        "$light-marginRight"?: import("react-native").DimensionValue | undefined;
        "$light-marginBottom"?: import("react-native").DimensionValue | undefined;
        "$light-marginLeft"?: import("react-native").DimensionValue | undefined;
        "$light-marginHorizontal"?: import("react-native").DimensionValue | undefined;
        "$light-marginVertical"?: import("react-native").DimensionValue | undefined;
        "$light-padding"?: import("react-native").DimensionValue | undefined;
        "$light-paddingTop"?: import("react-native").DimensionValue | undefined;
        "$light-paddingRight"?: import("react-native").DimensionValue | undefined;
        "$light-paddingBottom"?: import("react-native").DimensionValue | undefined;
        "$light-paddingLeft"?: import("react-native").DimensionValue | undefined;
        "$light-paddingHorizontal"?: import("react-native").DimensionValue | undefined;
        "$light-paddingVertical"?: import("react-native").DimensionValue | undefined;
        "$light-paddingStart"?: import("react-native").DimensionValue | undefined;
        "$light-paddingEnd"?: import("react-native").DimensionValue | undefined;
        "$light-top"?: import("react-native").DimensionValue | undefined;
        "$light-right"?: import("react-native").DimensionValue | undefined;
        "$light-bottom"?: import("react-native").DimensionValue | undefined;
        "$light-left"?: import("react-native").DimensionValue | undefined;
        "$light-shadowRadius"?: (number & {}) | undefined;
        "$light-elevation"?: (number & {}) | undefined;
        "$light-backgroundColor"?: (string & {}) | undefined;
        "$light-borderBottomColor"?: (string & {}) | undefined;
        "$light-borderColor"?: (string & {}) | undefined;
        "$light-borderLeftColor"?: (string & {}) | undefined;
        "$light-borderRightColor"?: (string & {}) | undefined;
        "$light-borderTopColor"?: (string & {}) | undefined;
        "$light-shadowColor"?: (string & {}) | undefined;
        "$light-borderBlockColor"?: (string & {}) | undefined;
        "$light-borderBlockEndColor"?: (string & {}) | undefined;
        "$light-borderBlockStartColor"?: (string & {}) | undefined;
        "$light-borderEndEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-borderStartStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-borderStartEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-borderEndStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-shadowOpacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-opacity"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-width"?: unknown;
        "$light-minWidth"?: unknown;
        "$light-maxWidth"?: unknown;
        "$light-height"?: unknown;
        "$light-minHeight"?: unknown;
        "$light-maxHeight"?: unknown;
        "$light-flexBasis"?: import("react-native").DimensionValue | undefined;
        "$light-borderWidth"?: (number & {}) | undefined;
        "$light-borderTopWidth"?: (number & {}) | undefined;
        "$light-borderRightWidth"?: (number & {}) | undefined;
        "$light-borderBottomWidth"?: (number & {}) | undefined;
        "$light-borderLeftWidth"?: (number & {}) | undefined;
        "$light-borderStyle"?: "solid" | "dotted" | "dashed" | undefined;
        "$light-borderRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-borderTopLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-borderTopRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-borderBottomRightRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-borderBottomLeftRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-zIndex"?: number | undefined;
        "$light-backfaceVisibility"?: "visible" | "hidden" | undefined;
        "$light-borderBottomEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-borderBottomStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-borderEndColor"?: import("react-native").ColorValue | undefined;
        "$light-borderStartColor"?: import("react-native").ColorValue | undefined;
        "$light-borderTopEndRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-borderTopStartRadius"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-alignContent"?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        "$light-alignItems"?: import("react-native").FlexAlignType | undefined;
        "$light-alignSelf"?: "auto" | import("react-native").FlexAlignType | undefined;
        "$light-aspectRatio"?: string | number | undefined;
        "$light-borderEndWidth"?: number | undefined;
        "$light-borderStartWidth"?: number | undefined;
        "$light-display"?: "flex" | "none" | undefined;
        "$light-end"?: import("react-native").DimensionValue | undefined;
        "$light-flex"?: number | undefined;
        "$light-flexDirection"?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        "$light-flexGrow"?: number | undefined;
        "$light-flexShrink"?: number | undefined;
        "$light-flexWrap"?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        "$light-justifyContent"?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        "$light-marginEnd"?: import("react-native").DimensionValue | undefined;
        "$light-marginStart"?: import("react-native").DimensionValue | undefined;
        "$light-overflow"?: "visible" | "hidden" | "scroll" | undefined;
        "$light-position"?: "absolute" | "relative" | undefined;
        "$light-start"?: import("react-native").DimensionValue | undefined;
        "$light-direction"?: "inherit" | "ltr" | "rtl" | undefined;
        "$light-shadowOffset"?: Readonly<{
            width: number;
            height: number;
        }> | undefined;
        "$light-transform"?: string | (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined;
        "$light-transformMatrix"?: number[] | undefined;
        "$light-rotation"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-scaleX"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-scaleY"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-translateX"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-translateY"?: import("react-native").AnimatableNumericValue | undefined;
        "$light-pointerEvents"?: "auto" | "none" | "box-none" | "box-only" | undefined;
        "$light-borderCurve"?: "circular" | "continuous" | undefined;
        allowFontScaling?: boolean | undefined;
        ellipsizeMode?: "clip" | "head" | "middle" | "tail" | undefined;
        lineBreakMode?: "clip" | "head" | "middle" | "tail" | undefined;
        numberOfLines?: number | undefined;
        onTextLayout?: ((event: import("react-native").NativeSyntheticEvent<import("react-native").TextLayoutEventData>) => void) | undefined;
        onPress?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onPressIn?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onPressOut?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onLongPress?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        maxFontSizeMultiplier?: number | null | undefined;
        adjustsFontSizeToFit?: boolean | undefined;
        dynamicTypeRamp?: "body" | "caption2" | "caption1" | "footnote" | "subheadline" | "callout" | "headline" | "title3" | "title2" | "title1" | "largeTitle" | undefined;
        minimumFontScale?: number | undefined;
        suppressHighlighting?: boolean | undefined;
        lineBreakStrategyIOS?: "none" | "standard" | "hangul-word" | "push-out" | undefined;
        selectable?: boolean | undefined;
        selectionColor?: import("react-native").ColorValue | undefined;
        textBreakStrategy?: "simple" | "highQuality" | "balanced" | undefined;
        dataDetectorType?: "none" | "link" | "phoneNumber" | "email" | "all" | null | undefined;
        android_hyphenationFrequency?: "none" | "normal" | "full" | undefined;
        verticalAlign?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$indeterminate-fontSize"?: (number & {}) | undefined;
        "$indeterminate-color"?: (string & {}) | undefined;
        "$indeterminate-textDecorationColor"?: (string & {}) | undefined;
        "$indeterminate-fontFamily"?: (string & {}) | undefined;
        "$indeterminate-fontWeight"?: (string & {}) | undefined;
        "$indeterminate-lineHeight"?: (number & {}) | undefined;
        "$indeterminate-letterSpacing"?: (number & {}) | undefined;
        "$indeterminate-testID"?: string | undefined;
        "$indeterminate-fontStyle"?: "normal" | "italic" | undefined;
        "$indeterminate-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$indeterminate-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$indeterminate-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$indeterminate-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$indeterminate-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$indeterminate-textShadowRadius"?: number | undefined;
        "$indeterminate-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$indeterminate-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$indeterminate-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$indeterminate-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$indeterminate-includeFontPadding"?: boolean | undefined;
        "$indeterminate-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$checked-fontSize"?: (number & {}) | undefined;
        "$checked-color"?: (string & {}) | undefined;
        "$checked-textDecorationColor"?: (string & {}) | undefined;
        "$checked-fontFamily"?: (string & {}) | undefined;
        "$checked-fontWeight"?: (string & {}) | undefined;
        "$checked-lineHeight"?: (number & {}) | undefined;
        "$checked-letterSpacing"?: (number & {}) | undefined;
        "$checked-testID"?: string | undefined;
        "$checked-fontStyle"?: "normal" | "italic" | undefined;
        "$checked-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$checked-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$checked-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$checked-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$checked-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$checked-textShadowRadius"?: number | undefined;
        "$checked-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$checked-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$checked-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$checked-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$checked-includeFontPadding"?: boolean | undefined;
        "$checked-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$readOnly-fontSize"?: (number & {}) | undefined;
        "$readOnly-color"?: (string & {}) | undefined;
        "$readOnly-textDecorationColor"?: (string & {}) | undefined;
        "$readOnly-fontFamily"?: (string & {}) | undefined;
        "$readOnly-fontWeight"?: (string & {}) | undefined;
        "$readOnly-lineHeight"?: (number & {}) | undefined;
        "$readOnly-letterSpacing"?: (number & {}) | undefined;
        "$readOnly-testID"?: string | undefined;
        "$readOnly-fontStyle"?: "normal" | "italic" | undefined;
        "$readOnly-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$readOnly-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$readOnly-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$readOnly-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$readOnly-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$readOnly-textShadowRadius"?: number | undefined;
        "$readOnly-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$readOnly-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$readOnly-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$readOnly-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$readOnly-includeFontPadding"?: boolean | undefined;
        "$readOnly-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$required-fontSize"?: (number & {}) | undefined;
        "$required-color"?: (string & {}) | undefined;
        "$required-textDecorationColor"?: (string & {}) | undefined;
        "$required-fontFamily"?: (string & {}) | undefined;
        "$required-fontWeight"?: (string & {}) | undefined;
        "$required-lineHeight"?: (number & {}) | undefined;
        "$required-letterSpacing"?: (number & {}) | undefined;
        "$required-testID"?: string | undefined;
        "$required-fontStyle"?: "normal" | "italic" | undefined;
        "$required-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$required-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$required-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$required-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$required-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$required-textShadowRadius"?: number | undefined;
        "$required-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$required-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$required-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$required-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$required-includeFontPadding"?: boolean | undefined;
        "$required-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$invalid-fontSize"?: (number & {}) | undefined;
        "$invalid-color"?: (string & {}) | undefined;
        "$invalid-textDecorationColor"?: (string & {}) | undefined;
        "$invalid-fontFamily"?: (string & {}) | undefined;
        "$invalid-fontWeight"?: (string & {}) | undefined;
        "$invalid-lineHeight"?: (number & {}) | undefined;
        "$invalid-letterSpacing"?: (number & {}) | undefined;
        "$invalid-testID"?: string | undefined;
        "$invalid-fontStyle"?: "normal" | "italic" | undefined;
        "$invalid-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$invalid-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$invalid-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$invalid-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$invalid-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$invalid-textShadowRadius"?: number | undefined;
        "$invalid-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$invalid-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$invalid-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$invalid-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$invalid-includeFontPadding"?: boolean | undefined;
        "$invalid-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$focus-fontSize"?: (number & {}) | undefined;
        "$focus-color"?: (string & {}) | undefined;
        "$focus-textDecorationColor"?: (string & {}) | undefined;
        "$focus-fontFamily"?: (string & {}) | undefined;
        "$focus-fontWeight"?: (string & {}) | undefined;
        "$focus-lineHeight"?: (number & {}) | undefined;
        "$focus-letterSpacing"?: (number & {}) | undefined;
        "$focus-testID"?: string | undefined;
        "$focus-fontStyle"?: "normal" | "italic" | undefined;
        "$focus-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$focus-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$focus-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$focus-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$focus-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$focus-textShadowRadius"?: number | undefined;
        "$focus-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$focus-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$focus-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$focus-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$focus-includeFontPadding"?: boolean | undefined;
        "$focus-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$focusVisible-fontSize"?: (number & {}) | undefined;
        "$focusVisible-color"?: (string & {}) | undefined;
        "$focusVisible-textDecorationColor"?: (string & {}) | undefined;
        "$focusVisible-fontFamily"?: (string & {}) | undefined;
        "$focusVisible-fontWeight"?: (string & {}) | undefined;
        "$focusVisible-lineHeight"?: (number & {}) | undefined;
        "$focusVisible-letterSpacing"?: (number & {}) | undefined;
        "$focusVisible-testID"?: string | undefined;
        "$focusVisible-fontStyle"?: "normal" | "italic" | undefined;
        "$focusVisible-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$focusVisible-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$focusVisible-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$focusVisible-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$focusVisible-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$focusVisible-textShadowRadius"?: number | undefined;
        "$focusVisible-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$focusVisible-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$focusVisible-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$focusVisible-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$focusVisible-includeFontPadding"?: boolean | undefined;
        "$focusVisible-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$hover-fontSize"?: (number & {}) | undefined;
        "$hover-color"?: (string & {}) | undefined;
        "$hover-textDecorationColor"?: (string & {}) | undefined;
        "$hover-fontFamily"?: (string & {}) | undefined;
        "$hover-fontWeight"?: (string & {}) | undefined;
        "$hover-lineHeight"?: (number & {}) | undefined;
        "$hover-letterSpacing"?: (number & {}) | undefined;
        "$hover-testID"?: string | undefined;
        "$hover-fontStyle"?: "normal" | "italic" | undefined;
        "$hover-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$hover-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$hover-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$hover-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$hover-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$hover-textShadowRadius"?: number | undefined;
        "$hover-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$hover-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$hover-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$hover-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$hover-includeFontPadding"?: boolean | undefined;
        "$hover-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$pressed-fontSize"?: (number & {}) | undefined;
        "$pressed-color"?: (string & {}) | undefined;
        "$pressed-textDecorationColor"?: (string & {}) | undefined;
        "$pressed-fontFamily"?: (string & {}) | undefined;
        "$pressed-fontWeight"?: (string & {}) | undefined;
        "$pressed-lineHeight"?: (number & {}) | undefined;
        "$pressed-letterSpacing"?: (number & {}) | undefined;
        "$pressed-testID"?: string | undefined;
        "$pressed-fontStyle"?: "normal" | "italic" | undefined;
        "$pressed-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$pressed-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$pressed-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$pressed-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$pressed-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$pressed-textShadowRadius"?: number | undefined;
        "$pressed-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$pressed-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$pressed-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$pressed-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$pressed-includeFontPadding"?: boolean | undefined;
        "$pressed-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$active-fontSize"?: (number & {}) | undefined;
        "$active-color"?: (string & {}) | undefined;
        "$active-textDecorationColor"?: (string & {}) | undefined;
        "$active-fontFamily"?: (string & {}) | undefined;
        "$active-fontWeight"?: (string & {}) | undefined;
        "$active-lineHeight"?: (number & {}) | undefined;
        "$active-letterSpacing"?: (number & {}) | undefined;
        "$active-testID"?: string | undefined;
        "$active-fontStyle"?: "normal" | "italic" | undefined;
        "$active-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$active-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$active-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$active-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$active-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$active-textShadowRadius"?: number | undefined;
        "$active-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$active-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$active-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$active-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$active-includeFontPadding"?: boolean | undefined;
        "$active-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$loading-fontSize"?: (number & {}) | undefined;
        "$loading-color"?: (string & {}) | undefined;
        "$loading-textDecorationColor"?: (string & {}) | undefined;
        "$loading-fontFamily"?: (string & {}) | undefined;
        "$loading-fontWeight"?: (string & {}) | undefined;
        "$loading-lineHeight"?: (number & {}) | undefined;
        "$loading-letterSpacing"?: (number & {}) | undefined;
        "$loading-testID"?: string | undefined;
        "$loading-fontStyle"?: "normal" | "italic" | undefined;
        "$loading-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$loading-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$loading-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$loading-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$loading-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$loading-textShadowRadius"?: number | undefined;
        "$loading-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$loading-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$loading-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$loading-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$loading-includeFontPadding"?: boolean | undefined;
        "$loading-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$disabled-fontSize"?: (number & {}) | undefined;
        "$disabled-color"?: (string & {}) | undefined;
        "$disabled-textDecorationColor"?: (string & {}) | undefined;
        "$disabled-fontFamily"?: (string & {}) | undefined;
        "$disabled-fontWeight"?: (string & {}) | undefined;
        "$disabled-lineHeight"?: (number & {}) | undefined;
        "$disabled-letterSpacing"?: (number & {}) | undefined;
        "$disabled-testID"?: string | undefined;
        "$disabled-fontStyle"?: "normal" | "italic" | undefined;
        "$disabled-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$disabled-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$disabled-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$disabled-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$disabled-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$disabled-textShadowRadius"?: number | undefined;
        "$disabled-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$disabled-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$disabled-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$disabled-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$disabled-includeFontPadding"?: boolean | undefined;
        "$disabled-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$ios-fontSize"?: (number & {}) | undefined;
        "$ios-color"?: (string & {}) | undefined;
        "$ios-textDecorationColor"?: (string & {}) | undefined;
        "$ios-fontFamily"?: (string & {}) | undefined;
        "$ios-fontWeight"?: (string & {}) | undefined;
        "$ios-lineHeight"?: (number & {}) | undefined;
        "$ios-letterSpacing"?: (number & {}) | undefined;
        "$ios-testID"?: string | undefined;
        "$ios-fontStyle"?: "normal" | "italic" | undefined;
        "$ios-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$ios-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$ios-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$ios-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$ios-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$ios-textShadowRadius"?: number | undefined;
        "$ios-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$ios-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$ios-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$ios-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$ios-includeFontPadding"?: boolean | undefined;
        "$ios-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$android-fontSize"?: (number & {}) | undefined;
        "$android-color"?: (string & {}) | undefined;
        "$android-textDecorationColor"?: (string & {}) | undefined;
        "$android-fontFamily"?: (string & {}) | undefined;
        "$android-fontWeight"?: (string & {}) | undefined;
        "$android-lineHeight"?: (number & {}) | undefined;
        "$android-letterSpacing"?: (number & {}) | undefined;
        "$android-testID"?: string | undefined;
        "$android-fontStyle"?: "normal" | "italic" | undefined;
        "$android-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$android-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$android-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$android-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$android-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$android-textShadowRadius"?: number | undefined;
        "$android-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$android-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$android-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$android-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$android-includeFontPadding"?: boolean | undefined;
        "$android-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$web-fontSize"?: (string & {}) | (number & {}) | undefined;
        "$web-color"?: (string & {}) | undefined;
        "$web-textDecorationColor"?: (string & {}) | undefined;
        "$web-fontFamily"?: (string & {}) | undefined;
        "$web-fontWeight"?: (string & {}) | undefined;
        "$web-lineHeight"?: (string & {}) | (number & {}) | undefined;
        "$web-letterSpacing"?: (string & {}) | (number & {}) | undefined;
        "$web-testID"?: string | undefined;
        "$web-fontStyle"?: "normal" | "italic" | undefined;
        "$web-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$web-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$web-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$web-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$web-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$web-textShadowRadius"?: number | undefined;
        "$web-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$web-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$web-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$web-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$web-includeFontPadding"?: boolean | undefined;
        "$web-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$dark-fontSize"?: (number & {}) | undefined;
        "$dark-color"?: (string & {}) | undefined;
        "$dark-textDecorationColor"?: (string & {}) | undefined;
        "$dark-fontFamily"?: (string & {}) | undefined;
        "$dark-fontWeight"?: (string & {}) | undefined;
        "$dark-lineHeight"?: (number & {}) | undefined;
        "$dark-letterSpacing"?: (number & {}) | undefined;
        "$dark-testID"?: string | undefined;
        "$dark-fontStyle"?: "normal" | "italic" | undefined;
        "$dark-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$dark-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$dark-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$dark-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$dark-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$dark-textShadowRadius"?: number | undefined;
        "$dark-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$dark-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$dark-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$dark-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$dark-includeFontPadding"?: boolean | undefined;
        "$dark-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
        "$light-fontSize"?: (number & {}) | undefined;
        "$light-color"?: (string & {}) | undefined;
        "$light-textDecorationColor"?: (string & {}) | undefined;
        "$light-fontFamily"?: (string & {}) | undefined;
        "$light-fontWeight"?: (string & {}) | undefined;
        "$light-lineHeight"?: (number & {}) | undefined;
        "$light-letterSpacing"?: (number & {}) | undefined;
        "$light-testID"?: string | undefined;
        "$light-fontStyle"?: "normal" | "italic" | undefined;
        "$light-textAlign"?: "right" | "left" | "center" | "auto" | "justify" | undefined;
        "$light-textDecorationLine"?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
        "$light-textDecorationStyle"?: "solid" | "dotted" | "dashed" | "double" | undefined;
        "$light-textShadowColor"?: import("react-native").ColorValue | undefined;
        "$light-textShadowOffset"?: {
            width: number;
            height: number;
        } | undefined;
        "$light-textShadowRadius"?: number | undefined;
        "$light-textTransform"?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
        "$light-fontVariant"?: import("react-native").FontVariant[] | undefined;
        "$light-writingDirection"?: "auto" | "ltr" | "rtl" | undefined;
        "$light-textAlignVertical"?: "top" | "bottom" | "center" | "auto" | undefined;
        "$light-includeFontPadding"?: boolean | undefined;
        "$light-verticalAlign"?: "top" | "bottom" | "auto" | "middle" | undefined;
    } | undefined;
}>;
export declare const SelectScrollView: import("react").ForwardRefExoticComponent<Omit<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ScrollViewProps, "ScrollView", typeof import("react-native").ScrollView>, "SelectActionsheetScrollView", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ScrollViewProps, "ScrollView", typeof import("react-native").ScrollView>>>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ScrollViewProps, "ScrollView", typeof import("react-native").ScrollView>, "SelectActionsheetScrollView", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ScrollViewProps, "ScrollView", typeof import("react-native").ScrollView>>>, "ref">, "ref"> & import("react").RefAttributes<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ScrollViewProps, "ScrollView", typeof import("react-native").ScrollView>, "SelectActionsheetScrollView", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ScrollViewProps, "ScrollView", typeof import("react-native").ScrollView>>>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ScrollViewProps, "ScrollView", typeof import("react-native").ScrollView>, "SelectActionsheetScrollView", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ScrollViewProps, "ScrollView", typeof import("react-native").ScrollView>>>, "ref">>>;
export declare const SelectVirtualizedList: import("react").ForwardRefExoticComponent<Omit<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").VirtualizedListProps<unknown>, "SelectActionsheetVirtualizedList", typeof import("react-native").VirtualizedList>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").VirtualizedListProps<unknown>, "SelectActionsheetVirtualizedList", typeof import("react-native").VirtualizedList>, "ref">, "ref"> & import("react").RefAttributes<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").VirtualizedListProps<unknown>, "SelectActionsheetVirtualizedList", typeof import("react-native").VirtualizedList>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").VirtualizedListProps<unknown>, "SelectActionsheetVirtualizedList", typeof import("react-native").VirtualizedList>, "ref">>>;
export declare const SelectFlatList: import("react").ForwardRefExoticComponent<Omit<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").FlatListProps<unknown>, "FlatList", typeof import("react-native").FlatList>, "SelectActionsheetFlatList", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").FlatListProps<unknown>, "FlatList", typeof import("react-native").FlatList>>>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").FlatListProps<unknown>, "FlatList", typeof import("react-native").FlatList>, "SelectActionsheetFlatList", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").FlatListProps<unknown>, "FlatList", typeof import("react-native").FlatList>>>, "ref">, "ref"> & import("react").RefAttributes<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").FlatListProps<unknown>, "FlatList", typeof import("react-native").FlatList>, "SelectActionsheetFlatList", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").FlatListProps<unknown>, "FlatList", typeof import("react-native").FlatList>>>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").FlatListProps<unknown>, "FlatList", typeof import("react-native").FlatList>, "SelectActionsheetFlatList", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").FlatListProps<unknown>, "FlatList", typeof import("react-native").FlatList>>>, "ref">>>;
export declare const SelectSectionList: import("react").ForwardRefExoticComponent<Omit<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").SectionListProps<unknown, unknown>, "SectionList", typeof import("react-native").SectionList>, "SelectActionsheetSectionList", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").SectionListProps<unknown, unknown>, "SectionList", typeof import("react-native").SectionList>>>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").SectionListProps<unknown, unknown>, "SectionList", typeof import("react-native").SectionList>, "SelectActionsheetSectionList", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").SectionListProps<unknown, unknown>, "SectionList", typeof import("react-native").SectionList>>>, "ref">, "ref"> & import("react").RefAttributes<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").SectionListProps<unknown, unknown>, "SectionList", typeof import("react-native").SectionList>, "SelectActionsheetSectionList", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").SectionListProps<unknown, unknown>, "SectionList", typeof import("react-native").SectionList>>>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").SectionListProps<unknown, unknown>, "SectionList", typeof import("react-native").SectionList>, "SelectActionsheetSectionList", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").SectionListProps<unknown, unknown>, "SectionList", typeof import("react-native").SectionList>>>, "ref">>>;
export declare const SelectSectionHeaderText: import("react").ForwardRefExoticComponent<Omit<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>, "SelectActionsheetSectionHeaderText", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>>>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>, "SelectActionsheetSectionHeaderText", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>>>, "ref">, "ref"> & import("react").RefAttributes<import("react").RefAttributes<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>, "SelectActionsheetSectionHeaderText", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>>>> & Omit<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>, "SelectActionsheetSectionHeaderText", import("react").ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text", typeof import("react-native").Text>>>, "ref">>>;
