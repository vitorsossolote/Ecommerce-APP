{"version":3,"names":["_tools","require","_react","_react2","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","exitableByKey","children","map","Map","Children","forEach","child","_child$props","props","exit","isString","AnimatePresence","_ref","fr","useForceRender","childArr","toArray","childrenPrevious","usePrevious","childrenByKey","childrenByKeyPrevious","exiting","useRef","prevChild","current","childrenToRender","delete","index","indexOf","splice","createElement","Fragment","animKeys","keys","cloneElement","animate","onAnimationComplete","animKey","arrayRemove","length"],"sources":["AnimatePresence.tsx"],"sourcesContent":["import { arrayRemove, isString } from '@legendapp/tools';\nimport { useForceRender, usePrevious } from '@legendapp/tools/react';\nimport React, { Children, cloneElement, Key, ReactElement, ReactNode, useRef } from 'react';\n\ninterface Props {\n    children: ReactNode;\n}\n\nfunction exitableByKey(children: ReactNode[]) {\n    const map = new Map<Key, ReactElement>();\n    Children.forEach(children, (child: ReactElement) => {\n        if (child.key && child.props?.exit && isString(child.key)) {\n            map.set(child.key, child);\n        }\n    });\n    return map;\n}\n\nexport function AnimatePresence({ children }: Props) {\n    const fr = useForceRender();\n    const childArr = Children.toArray(children);\n    const childrenPrevious = usePrevious(childArr);\n\n    // Map children and previous children to { key: child }\n    const childrenByKey = exitableByKey(childArr);\n    const childrenByKeyPrevious = usePrevious(childrenByKey);\n\n    // Add newly exited elements to the exiting map\n    const exiting = useRef(new Map<Key, ReactElement>());\n    if (childrenByKeyPrevious) {\n        childrenByKeyPrevious.forEach((prevChild, key) => {\n            if (!childrenByKey.get(key)) {\n                exiting.current.set(key, prevChild);\n            }\n        });\n    }\n\n    // Render exiting elements into the position they were previously\n    let childrenToRender = [...childArr];\n    exiting.current.forEach((child, key) => {\n        if (childrenByKey.get(key)) {\n            exiting.current.delete(key);\n        } else {\n            const index = childrenPrevious.indexOf(child);\n            childrenToRender.splice(index, 0, child);\n        }\n    });\n\n    return (\n        <>\n            {childrenToRender.map((child: ReactElement) => {\n                if (child && child.props.exit) {\n                    const key = child.key;\n                    const animKeys = Object.keys(child.props.exit);\n                    // Remove the child when all exit animations end\n                    return key && exiting.current.get(key) && animKeys\n                        ? cloneElement(child, {\n                              animate: child.props.exit,\n                              onAnimationComplete: (animKey) => {\n                                  if (exiting.current.has(key)) {\n                                      arrayRemove(animKeys, animKey);\n                                      if (animKeys.length === 0) {\n                                          exiting.current.delete(key);\n                                          fr();\n                                      }\n                                  }\n                              },\n                          })\n                        : child;\n                }\n                return child;\n            })}\n        </>\n    );\n}\n"],"mappings":"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","ignoreList":[]}