{"version":3,"names":["_tools","require","_react","_interopRequireWildcard","_reactNative","_configureMotion","_Constants","_MotionPressable","_useTransformOrigin","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","target","i","arguments","length","source","apply","TransformKeys","x","y","scale","scaleX","scaleY","skewX","skewY","perspective","rotate","rotateX","rotateY","rotateZ","matrix","OtherNativeKeys","opacity","DefaultValues","DefaultTransition","type","duration","DefaultTransitionTime","Eases","linear","Easing","easeIn","ease","easeInOut","inOut","easeOut","out","circIn","circle","circInOut","circOut","backIn","back","backInOut","backOut","addKeysToSet","Set","undefined","keys","add","createMotionComponent","Component","forwardRef","MotionComponent","_ref","ref","animate","animateProps","initial","initialProps","exit","transition","transformOrigin","style","styleProp","onLayout","onLayoutProp","whileTap","whileHover","onAnimationComplete","rest","refAnims","useRef","animKeysSet","values","pressed","hovered","useContext","ContextPressable","animKeys","animValues","map","update","anims","current","useNativeDriver","every","_ref2","_ref3","isProp","value","valueInitial","isStr","isString","isArr","isArray","startValue","animValue","Animated","Value","valueInterp","toValue","fromInterp","from","interpolation","interpolate","inputRange","outputRange","transitionForKey","config","timing","isNumber","easing","animOptions","requestAnimationFrame","callback","loop","animation","spring","iterations","start","useMemo","animProps","transforms","entries","forEach","_ref4","push","transform","_ref5","useTransformOrigin","createElement","createMotionAnimatedComponent","component","createAnimatedComponent"],"sources":["createMotionComponent.tsx"],"sourcesContent":["import { isArray, isNumber, isString } from '@legendapp/tools';\nimport React, { ComponentPropsWithRef, ComponentType, forwardRef, ReactElement, Ref, useContext, useMemo, useRef } from 'react';\nimport { Animated, Easing, StyleProp, TransformsStyle } from 'react-native';\nimport { config } from './configureMotion';\nimport { DefaultTransitionTime } from './Constants';\nimport type {\n    ComponentStyle,\n    EaseFunction,\n    MotionComponentProps,\n    MotionTransition,\n    MotionTransitionTween,\n    PropsTransforms,\n    UnionToIntersection,\n} from './Interfaces';\nimport { ContextPressable } from './MotionPressable';\nimport { useTransformOrigin } from './useTransformOrigin';\n\ninterface AnimInfo {\n    animValue: Animated.Value;\n    value: any;\n    valueInterp?: number;\n    interpolation?: any;\n}\n\nconst TransformKeys: Record<keyof PropsTransforms, keyof UnionToIntersection<TransformsStyle['transform'][number]>> = {\n    x: 'translateX',\n    y: 'translateY',\n    scale: 'scale',\n    scaleX: 'scaleX',\n    scaleY: 'scaleY',\n    skewX: 'skewX',\n    skewY: 'skewY',\n    perspective: 'perspective',\n    rotate: 'rotate',\n    rotateX: 'rotateX',\n    rotateY: 'rotateY',\n    rotateZ: 'rotateZ',\n    matrix: 'matrix',\n};\n\nconst OtherNativeKeys = {\n    opacity: 'opacity',\n} as const;\n\nconst DefaultValues: Record<keyof PropsTransforms | keyof typeof OtherNativeKeys, any> = {\n    x: 0,\n    y: 0,\n    scale: 1,\n    scaleX: 1,\n    scaleY: 1,\n    skewX: '0deg',\n    skewY: '0deg',\n    perspective: 0,\n    rotate: '0deg',\n    rotateX: '0deg',\n    rotateY: '0deg',\n    rotateZ: '0deg',\n    matrix: [],\n    opacity: 1,\n};\n\nconst DefaultTransition: MotionTransition = { type: 'tween', duration: DefaultTransitionTime };\nconst Eases: Record<EaseFunction, (value: number) => number> = {\n    linear: Easing.linear,\n    easeIn: Easing.ease,\n    easeInOut: Easing.inOut(Easing.ease),\n    easeOut: Easing.out(Easing.ease),\n    circIn: Easing.circle,\n    circInOut: Easing.inOut(Easing.circle),\n    circOut: Easing.out(Easing.circle),\n    backIn: Easing.back(2),\n    backInOut: Easing.inOut(Easing.back(2)),\n    backOut: Easing.out(Easing.back(2)),\n};\n\nfunction addKeysToSet(...objs: Record<string, any>[]) {\n    const set = new Set<string>();\n    for (let i = 0; i < objs.length; i++) {\n        const obj = objs[i];\n        if (obj) {\n            const keys = Object.keys(obj);\n            for (let i = 0; i < keys.length; i++) {\n                set.add(keys[i]);\n            }\n        }\n    }\n    return set;\n}\n\nexport function createMotionComponent<T extends ComponentType<any>, TExtraProps = {}>(Component: Animated.AnimatedComponent<T> | T) {\n    return forwardRef(function MotionComponent<TAnimate, TAnimateProps>(\n        {\n            animate,\n            animateProps,\n            initial,\n            initialProps,\n            exit,\n            transition,\n            transformOrigin,\n            style: styleProp,\n            onLayout: onLayoutProp,\n            whileTap,\n            whileHover,\n            onAnimationComplete,\n            ...rest\n        }: Animated.AnimatedProps<ComponentPropsWithRef<T & TExtraProps>> &\n            MotionComponentProps<T, ComponentStyle<T>, TAnimate, TAnimateProps>,\n        // @ts-ignore\n        ref: Ref<InstanceType<T>>\n    ) {\n        const refAnims = useRef<Partial<Record<string, AnimInfo>>>({});\n\n        // Generate the arrays of keys and values for transitioning. These are used as deps of useMemo\n        // so that it will update whenever a key or value changes.\n        const animKeysSet = addKeysToSet(initial, animate, animateProps, whileTap, whileHover, exit);\n        const values = Object.assign({}, animate);\n\n        if (animateProps) {\n            addKeysToSet(animKeysSet, animateProps);\n            Object.assign(values, animateProps);\n        }\n\n        if (whileTap || whileHover) {\n            const { pressed, hovered } = useContext(ContextPressable);\n\n            if (whileHover) {\n                addKeysToSet(animKeysSet, whileHover);\n                if (hovered) {\n                    Object.assign(values, whileHover);\n                }\n            }\n            if (whileTap) {\n                addKeysToSet(animKeysSet, whileTap);\n                if (pressed) {\n                    Object.assign(values, whileTap);\n                }\n            }\n        }\n\n        if (exit) {\n            addKeysToSet(animKeysSet, exit);\n        }\n\n        const animKeys = [...animKeysSet];\n        const animValues = animKeys.map((key) => values[key]);\n\n        const update = () => {\n            const anims = refAnims.current;\n\n            const useNativeDriver = !animateProps && animKeys.every((key) => !!OtherNativeKeys[key] || !!TransformKeys[key]);\n\n            for (let i = 0; i < animKeys.length; i++) {\n                const key = animKeys[i];\n                const isProp = animateProps?.[key] !== undefined;\n                let value = values[key];\n                const valueInitial = (isProp ? initialProps?.[key] : initial?.[key]) ?? value ?? DefaultValues[key];\n                if (value === undefined) {\n                    value = valueInitial ?? DefaultValues[key];\n                }\n\n                if (!anims[key] || anims[key].value !== value) {\n                    const isStr = isString(valueInitial);\n                    const isArr = isArray(valueInitial);\n\n                    // If this is the first run or it's a new key, create the Animated.Value\n                    if (!anims[key]) {\n                        const startValue = isStr || isArr ? 1 : (valueInitial as number);\n                        const animValue = new Animated.Value(startValue);\n                        anims[key] = {\n                            value: valueInitial,\n                            animValue,\n                            valueInterp: isStr ? 1 : undefined,\n                        };\n                    }\n\n                    let toValue: number;\n                    // If string or array it needs to interpolate, so toggle back and forth between 0 and 1,\n                    // interpolating from current value to target value\n                    if (isStr || isArr) {\n                        const fromInterp = anims[key].valueInterp;\n                        const from = anims[key].value;\n                        anims[key].interpolation = anims[key].animValue.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: fromInterp === 1 ? [value, from] : [from, value],\n                        });\n                        anims[key].valueInterp = toValue = 1 - fromInterp;\n                        anims[key].value = value;\n                    } else {\n                        anims[key].value = toValue = value as number;\n                    }\n\n                    // Get the transition for this key, the 'default' key, the root transition, or default transition if no transition prop\n                    const transitionForKey: MotionTransition =\n                        transition?.[key] || transition?.['default'] || transition || DefaultTransition;\n\n                    if (\n                        config.timing === 's' &&\n                        transitionForKey !== DefaultTransition &&\n                        isNumber((transitionForKey as MotionTransitionTween).duration)\n                    ) {\n                        (transitionForKey as MotionTransitionTween).duration *= 1000;\n                    }\n\n                    if (isString((transitionForKey as MotionTransitionTween).easing)) {\n                        (transitionForKey as MotionTransitionTween).easing =\n                            Eases[(transitionForKey as MotionTransitionTween).easing as unknown as EaseFunction];\n                    }\n                    if (isString((transitionForKey as MotionTransitionTween).ease)) {\n                        (transitionForKey as MotionTransitionTween).ease =\n                            Eases[(transitionForKey as MotionTransitionTween).ease as unknown as EaseFunction];\n                    }\n\n                    const animOptions = Object.assign(\n                        {\n                            toValue,\n                            useNativeDriver,\n                        },\n                        transitionForKey\n                    );\n\n                    // This typeof check is to make it work when rendered server-side like in Next.js\n                    if (typeof requestAnimationFrame !== 'undefined') {\n                        requestAnimationFrame(() => {\n                            const callback = onAnimationComplete ? () => onAnimationComplete(key) : undefined;\n                            const { loop, type } = transitionForKey;\n\n                            let animation: Animated.CompositeAnimation;\n\n                            // Spring or timing based on the transition prop\n                            if (type === 'spring') {\n                                animation = Animated.spring(anims[key].animValue, animOptions);\n                            } else {\n                                animation = Animated.timing(anims[key].animValue, animOptions as Animated.TimingAnimationConfig);\n                            }\n\n                            // Loop based on the transition prop\n                            if (loop !== undefined) {\n                                animation = Animated.loop(animation, { iterations: loop });\n                            }\n\n                            animation.start(callback);\n                        });\n                    }\n                }\n            }\n        };\n\n        useMemo(update, animValues); // eslint-disable-line react-hooks/exhaustive-deps\n\n        // Apply the animations to the style object\n        const style: StyleProp<any> = {};\n        const animProps = {};\n        const transforms: { key: string; value: AnimInfo }[] = [];\n        Object.entries(refAnims.current).forEach(([key, value]) => {\n            if (animateProps?.[key] !== undefined) {\n                animProps[key] = value.interpolation || value.animValue;\n            } else if (TransformKeys[key]) {\n                transforms.push({ key, value });\n            } else {\n                style[key] = value.interpolation || value.animValue;\n            }\n        });\n\n        // Map the transforms into an Animated transforms array\n        if (transforms.length) {\n            style.transform = transforms.map(({ key, value }) => ({\n                [TransformKeys[key]]: value.interpolation || value.animValue,\n            }));\n        }\n\n        const onLayout = transformOrigin ? useTransformOrigin(transformOrigin, style.transform, onLayoutProp) : onLayoutProp;\n\n        // @ts-ignore\n        return <Component style={[styleProp, style]} onLayout={onLayout} {...rest} {...animProps} ref={ref} />;\n    }) as <TAnimate, TAnimateProps>(\n        p: Animated.AnimatedProps<ComponentPropsWithRef<T>> &\n            TExtraProps &\n            MotionComponentProps<T, ComponentStyle<T>, TAnimate, TAnimateProps>,\n        // @ts-ignore\n        ref: Ref<InstanceType<T>>\n    ) => ReactElement;\n}\nexport function createMotionAnimatedComponent<T extends ComponentType<any>>(component: T) {\n    return createMotionComponent(Animated.createAnimatedComponent(component));\n}\n"],"mappings":"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","ignoreList":[]}