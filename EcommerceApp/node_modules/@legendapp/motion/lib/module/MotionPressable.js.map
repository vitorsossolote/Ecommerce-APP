{"version":3,"names":["React","createContext","useCallback","useState","Platform","Pressable","ContextPressable","pressed","hovered","MotionPressable","props","onPressIn","onPressOut","onMouseEnter","onMouseLeave","children","rest","state","setState","update","cur","createElement","_extends","e","undefined","OS","Provider","value"],"sources":["MotionPressable.tsx"],"sourcesContent":["import React, { createContext, useCallback, useState } from 'react';\nimport { Platform, Pressable, PressableProps } from 'react-native';\n\nexport const ContextPressable = createContext({ pressed: false, hovered: false });\n\nexport function MotionPressable(props: PressableProps) {\n    // @ts-ignore Web props cause errors\n    const { onPressIn, onPressOut, onMouseEnter, onMouseLeave, children, ...rest } = props;\n\n    const [state, setState] = useState({ pressed: false, hovered: false });\n\n    const update = useCallback((pressed: boolean, hovered: boolean) => {\n        setState((cur) => ({\n            pressed: pressed ?? cur.pressed,\n            hovered: hovered ?? cur.hovered,\n        }));\n    }, []);\n\n    return (\n        <Pressable\n            onPressIn={(e) => {\n                update(true, undefined);\n                onPressIn?.(e);\n            }}\n            onPressOut={(e) => {\n                update(false, undefined);\n                onPressOut?.(e);\n            }}\n            // @ts-ignore\n            onMouseEnter={\n                Platform.OS === 'web'\n                    ? (e) => {\n                          update(undefined, true);\n                          onMouseEnter?.(e);\n                      }\n                    : undefined\n            }\n            // @ts-ignore\n            onMouseLeave={\n                Platform.OS === 'web'\n                    ? (e) => {\n                          update(undefined, false);\n                          onMouseLeave?.(e);\n                      }\n                    : undefined\n            }\n            {...rest}\n        >\n            <ContextPressable.Provider value={state}>{children}</ContextPressable.Provider>\n        </Pressable>\n    );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACnE,SAASC,QAAQ,EAAEC,SAAS,QAAwB,cAAc;AAElE,OAAO,MAAMC,gBAAgB,gBAAGL,aAAa,CAAC;EAAEM,OAAO,EAAE,KAAK;EAAEC,OAAO,EAAE;AAAM,CAAC,CAAC;AAEjF,OAAO,SAASC,eAAeA,CAACC,KAAqB,EAAE;EACnD;EACA,MAAM;IAAEC,SAAS;IAAEC,UAAU;IAAEC,YAAY;IAAEC,YAAY;IAAEC,QAAQ;IAAE,GAAGC;EAAK,CAAC,GAAGN,KAAK;EAEtF,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC;IAAEI,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAM,CAAC,CAAC;EAEtE,MAAMW,MAAM,GAAGjB,WAAW,CAAC,CAACK,OAAgB,EAAEC,OAAgB,KAAK;IAC/DU,QAAQ,CAAEE,GAAG,KAAM;MACfb,OAAO,EAAEA,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAIa,GAAG,CAACb,OAAO;MAC/BC,OAAO,EAAEA,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAIY,GAAG,CAACZ;IAC5B,CAAC,CAAC,CAAC;EACP,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,KAAA,CAAAqB,aAAA,CAAChB,SAAS,EAAAiB,QAAA;IACNX,SAAS,EAAGY,CAAC,IAAK;MACdJ,MAAM,CAAC,IAAI,EAAEK,SAAS,CAAC;MACvBb,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAGY,CAAC,CAAC;IAClB,CAAE;IACFX,UAAU,EAAGW,CAAC,IAAK;MACfJ,MAAM,CAAC,KAAK,EAAEK,SAAS,CAAC;MACxBZ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAGW,CAAC,CAAC;IACnB;IACA;IAAA;IACAV,YAAY,EACRT,QAAQ,CAACqB,EAAE,KAAK,KAAK,GACdF,CAAC,IAAK;MACHJ,MAAM,CAACK,SAAS,EAAE,IAAI,CAAC;MACvBX,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAGU,CAAC,CAAC;IACrB,CAAC,GACDC;IAEV;IAAA;IACAV,YAAY,EACRV,QAAQ,CAACqB,EAAE,KAAK,KAAK,GACdF,CAAC,IAAK;MACHJ,MAAM,CAACK,SAAS,EAAE,KAAK,CAAC;MACxBV,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAGS,CAAC,CAAC;IACrB,CAAC,GACDC;EACT,GACGR,IAAI,gBAERhB,KAAA,CAAAqB,aAAA,CAACf,gBAAgB,CAACoB,QAAQ;IAACC,KAAK,EAAEV;EAAM,GAAEF,QAAoC,CACvE,CAAC;AAEpB","ignoreList":[]}