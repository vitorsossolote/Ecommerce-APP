{"version":3,"names":["arrayRemove","isString","useForceRender","usePrevious","React","Children","cloneElement","useRef","exitableByKey","children","map","Map","forEach","child","_child$props","key","props","exit","set","AnimatePresence","_ref","fr","childArr","toArray","childrenPrevious","childrenByKey","childrenByKeyPrevious","exiting","prevChild","get","current","childrenToRender","delete","index","indexOf","splice","createElement","Fragment","animKeys","Object","keys","animate","onAnimationComplete","animKey","has","length"],"sources":["AnimatePresence.tsx"],"sourcesContent":["import { arrayRemove, isString } from '@legendapp/tools';\nimport { useForceRender, usePrevious } from '@legendapp/tools/react';\nimport React, { Children, cloneElement, Key, ReactElement, ReactNode, useRef } from 'react';\n\ninterface Props {\n    children: ReactNode;\n}\n\nfunction exitableByKey(children: ReactNode[]) {\n    const map = new Map<Key, ReactElement>();\n    Children.forEach(children, (child: ReactElement) => {\n        if (child.key && child.props?.exit && isString(child.key)) {\n            map.set(child.key, child);\n        }\n    });\n    return map;\n}\n\nexport function AnimatePresence({ children }: Props) {\n    const fr = useForceRender();\n    const childArr = Children.toArray(children);\n    const childrenPrevious = usePrevious(childArr);\n\n    // Map children and previous children to { key: child }\n    const childrenByKey = exitableByKey(childArr);\n    const childrenByKeyPrevious = usePrevious(childrenByKey);\n\n    // Add newly exited elements to the exiting map\n    const exiting = useRef(new Map<Key, ReactElement>());\n    if (childrenByKeyPrevious) {\n        childrenByKeyPrevious.forEach((prevChild, key) => {\n            if (!childrenByKey.get(key)) {\n                exiting.current.set(key, prevChild);\n            }\n        });\n    }\n\n    // Render exiting elements into the position they were previously\n    let childrenToRender = [...childArr];\n    exiting.current.forEach((child, key) => {\n        if (childrenByKey.get(key)) {\n            exiting.current.delete(key);\n        } else {\n            const index = childrenPrevious.indexOf(child);\n            childrenToRender.splice(index, 0, child);\n        }\n    });\n\n    return (\n        <>\n            {childrenToRender.map((child: ReactElement) => {\n                if (child && child.props.exit) {\n                    const key = child.key;\n                    const animKeys = Object.keys(child.props.exit);\n                    // Remove the child when all exit animations end\n                    return key && exiting.current.get(key) && animKeys\n                        ? cloneElement(child, {\n                              animate: child.props.exit,\n                              onAnimationComplete: (animKey) => {\n                                  if (exiting.current.has(key)) {\n                                      arrayRemove(animKeys, animKey);\n                                      if (animKeys.length === 0) {\n                                          exiting.current.delete(key);\n                                          fr();\n                                      }\n                                  }\n                              },\n                          })\n                        : child;\n                }\n                return child;\n            })}\n        </>\n    );\n}\n"],"mappings":"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","ignoreList":[]}