{"version":3,"names":["isArray","isNumber","isString","React","forwardRef","useContext","useMemo","useRef","Animated","Easing","config","DefaultTransitionTime","ContextPressable","useTransformOrigin","TransformKeys","x","y","scale","scaleX","scaleY","skewX","skewY","perspective","rotate","rotateX","rotateY","rotateZ","matrix","OtherNativeKeys","opacity","DefaultValues","DefaultTransition","type","duration","Eases","linear","easeIn","ease","easeInOut","inOut","easeOut","out","circIn","circle","circInOut","circOut","backIn","back","backInOut","backOut","addKeysToSet","set","Set","i","arguments","length","obj","undefined","keys","Object","add","createMotionComponent","Component","MotionComponent","_ref","ref","animate","animateProps","initial","initialProps","exit","transition","transformOrigin","style","styleProp","onLayout","onLayoutProp","whileTap","whileHover","onAnimationComplete","rest","refAnims","animKeysSet","values","assign","pressed","hovered","animKeys","animValues","map","key","update","anims","current","useNativeDriver","every","_ref2","_ref3","isProp","value","valueInitial","isStr","isArr","startValue","animValue","Value","valueInterp","toValue","fromInterp","from","interpolation","interpolate","inputRange","outputRange","transitionForKey","timing","easing","animOptions","requestAnimationFrame","callback","loop","animation","spring","iterations","start","animProps","transforms","entries","forEach","_ref4","push","transform","_ref5","createElement","_extends","createMotionAnimatedComponent","component","createAnimatedComponent"],"sources":["createMotionComponent.tsx"],"sourcesContent":["import { isArray, isNumber, isString } from '@legendapp/tools';\nimport React, { ComponentPropsWithRef, ComponentType, forwardRef, ReactElement, Ref, useContext, useMemo, useRef } from 'react';\nimport { Animated, Easing, StyleProp, TransformsStyle } from 'react-native';\nimport { config } from './configureMotion';\nimport { DefaultTransitionTime } from './Constants';\nimport type {\n    ComponentStyle,\n    EaseFunction,\n    MotionComponentProps,\n    MotionTransition,\n    MotionTransitionTween,\n    PropsTransforms,\n    UnionToIntersection,\n} from './Interfaces';\nimport { ContextPressable } from './MotionPressable';\nimport { useTransformOrigin } from './useTransformOrigin';\n\ninterface AnimInfo {\n    animValue: Animated.Value;\n    value: any;\n    valueInterp?: number;\n    interpolation?: any;\n}\n\nconst TransformKeys: Record<keyof PropsTransforms, keyof UnionToIntersection<TransformsStyle['transform'][number]>> = {\n    x: 'translateX',\n    y: 'translateY',\n    scale: 'scale',\n    scaleX: 'scaleX',\n    scaleY: 'scaleY',\n    skewX: 'skewX',\n    skewY: 'skewY',\n    perspective: 'perspective',\n    rotate: 'rotate',\n    rotateX: 'rotateX',\n    rotateY: 'rotateY',\n    rotateZ: 'rotateZ',\n    matrix: 'matrix',\n};\n\nconst OtherNativeKeys = {\n    opacity: 'opacity',\n} as const;\n\nconst DefaultValues: Record<keyof PropsTransforms | keyof typeof OtherNativeKeys, any> = {\n    x: 0,\n    y: 0,\n    scale: 1,\n    scaleX: 1,\n    scaleY: 1,\n    skewX: '0deg',\n    skewY: '0deg',\n    perspective: 0,\n    rotate: '0deg',\n    rotateX: '0deg',\n    rotateY: '0deg',\n    rotateZ: '0deg',\n    matrix: [],\n    opacity: 1,\n};\n\nconst DefaultTransition: MotionTransition = { type: 'tween', duration: DefaultTransitionTime };\nconst Eases: Record<EaseFunction, (value: number) => number> = {\n    linear: Easing.linear,\n    easeIn: Easing.ease,\n    easeInOut: Easing.inOut(Easing.ease),\n    easeOut: Easing.out(Easing.ease),\n    circIn: Easing.circle,\n    circInOut: Easing.inOut(Easing.circle),\n    circOut: Easing.out(Easing.circle),\n    backIn: Easing.back(2),\n    backInOut: Easing.inOut(Easing.back(2)),\n    backOut: Easing.out(Easing.back(2)),\n};\n\nfunction addKeysToSet(...objs: Record<string, any>[]) {\n    const set = new Set<string>();\n    for (let i = 0; i < objs.length; i++) {\n        const obj = objs[i];\n        if (obj) {\n            const keys = Object.keys(obj);\n            for (let i = 0; i < keys.length; i++) {\n                set.add(keys[i]);\n            }\n        }\n    }\n    return set;\n}\n\nexport function createMotionComponent<T extends ComponentType<any>, TExtraProps = {}>(Component: Animated.AnimatedComponent<T> | T) {\n    return forwardRef(function MotionComponent<TAnimate, TAnimateProps>(\n        {\n            animate,\n            animateProps,\n            initial,\n            initialProps,\n            exit,\n            transition,\n            transformOrigin,\n            style: styleProp,\n            onLayout: onLayoutProp,\n            whileTap,\n            whileHover,\n            onAnimationComplete,\n            ...rest\n        }: Animated.AnimatedProps<ComponentPropsWithRef<T & TExtraProps>> &\n            MotionComponentProps<T, ComponentStyle<T>, TAnimate, TAnimateProps>,\n        // @ts-ignore\n        ref: Ref<InstanceType<T>>\n    ) {\n        const refAnims = useRef<Partial<Record<string, AnimInfo>>>({});\n\n        // Generate the arrays of keys and values for transitioning. These are used as deps of useMemo\n        // so that it will update whenever a key or value changes.\n        const animKeysSet = addKeysToSet(initial, animate, animateProps, whileTap, whileHover, exit);\n        const values = Object.assign({}, animate);\n\n        if (animateProps) {\n            addKeysToSet(animKeysSet, animateProps);\n            Object.assign(values, animateProps);\n        }\n\n        if (whileTap || whileHover) {\n            const { pressed, hovered } = useContext(ContextPressable);\n\n            if (whileHover) {\n                addKeysToSet(animKeysSet, whileHover);\n                if (hovered) {\n                    Object.assign(values, whileHover);\n                }\n            }\n            if (whileTap) {\n                addKeysToSet(animKeysSet, whileTap);\n                if (pressed) {\n                    Object.assign(values, whileTap);\n                }\n            }\n        }\n\n        if (exit) {\n            addKeysToSet(animKeysSet, exit);\n        }\n\n        const animKeys = [...animKeysSet];\n        const animValues = animKeys.map((key) => values[key]);\n\n        const update = () => {\n            const anims = refAnims.current;\n\n            const useNativeDriver = !animateProps && animKeys.every((key) => !!OtherNativeKeys[key] || !!TransformKeys[key]);\n\n            for (let i = 0; i < animKeys.length; i++) {\n                const key = animKeys[i];\n                const isProp = animateProps?.[key] !== undefined;\n                let value = values[key];\n                const valueInitial = (isProp ? initialProps?.[key] : initial?.[key]) ?? value ?? DefaultValues[key];\n                if (value === undefined) {\n                    value = valueInitial ?? DefaultValues[key];\n                }\n\n                if (!anims[key] || anims[key].value !== value) {\n                    const isStr = isString(valueInitial);\n                    const isArr = isArray(valueInitial);\n\n                    // If this is the first run or it's a new key, create the Animated.Value\n                    if (!anims[key]) {\n                        const startValue = isStr || isArr ? 1 : (valueInitial as number);\n                        const animValue = new Animated.Value(startValue);\n                        anims[key] = {\n                            value: valueInitial,\n                            animValue,\n                            valueInterp: isStr ? 1 : undefined,\n                        };\n                    }\n\n                    let toValue: number;\n                    // If string or array it needs to interpolate, so toggle back and forth between 0 and 1,\n                    // interpolating from current value to target value\n                    if (isStr || isArr) {\n                        const fromInterp = anims[key].valueInterp;\n                        const from = anims[key].value;\n                        anims[key].interpolation = anims[key].animValue.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: fromInterp === 1 ? [value, from] : [from, value],\n                        });\n                        anims[key].valueInterp = toValue = 1 - fromInterp;\n                        anims[key].value = value;\n                    } else {\n                        anims[key].value = toValue = value as number;\n                    }\n\n                    // Get the transition for this key, the 'default' key, the root transition, or default transition if no transition prop\n                    const transitionForKey: MotionTransition =\n                        transition?.[key] || transition?.['default'] || transition || DefaultTransition;\n\n                    if (\n                        config.timing === 's' &&\n                        transitionForKey !== DefaultTransition &&\n                        isNumber((transitionForKey as MotionTransitionTween).duration)\n                    ) {\n                        (transitionForKey as MotionTransitionTween).duration *= 1000;\n                    }\n\n                    if (isString((transitionForKey as MotionTransitionTween).easing)) {\n                        (transitionForKey as MotionTransitionTween).easing =\n                            Eases[(transitionForKey as MotionTransitionTween).easing as unknown as EaseFunction];\n                    }\n                    if (isString((transitionForKey as MotionTransitionTween).ease)) {\n                        (transitionForKey as MotionTransitionTween).ease =\n                            Eases[(transitionForKey as MotionTransitionTween).ease as unknown as EaseFunction];\n                    }\n\n                    const animOptions = Object.assign(\n                        {\n                            toValue,\n                            useNativeDriver,\n                        },\n                        transitionForKey\n                    );\n\n                    // This typeof check is to make it work when rendered server-side like in Next.js\n                    if (typeof requestAnimationFrame !== 'undefined') {\n                        requestAnimationFrame(() => {\n                            const callback = onAnimationComplete ? () => onAnimationComplete(key) : undefined;\n                            const { loop, type } = transitionForKey;\n\n                            let animation: Animated.CompositeAnimation;\n\n                            // Spring or timing based on the transition prop\n                            if (type === 'spring') {\n                                animation = Animated.spring(anims[key].animValue, animOptions);\n                            } else {\n                                animation = Animated.timing(anims[key].animValue, animOptions as Animated.TimingAnimationConfig);\n                            }\n\n                            // Loop based on the transition prop\n                            if (loop !== undefined) {\n                                animation = Animated.loop(animation, { iterations: loop });\n                            }\n\n                            animation.start(callback);\n                        });\n                    }\n                }\n            }\n        };\n\n        useMemo(update, animValues); // eslint-disable-line react-hooks/exhaustive-deps\n\n        // Apply the animations to the style object\n        const style: StyleProp<any> = {};\n        const animProps = {};\n        const transforms: { key: string; value: AnimInfo }[] = [];\n        Object.entries(refAnims.current).forEach(([key, value]) => {\n            if (animateProps?.[key] !== undefined) {\n                animProps[key] = value.interpolation || value.animValue;\n            } else if (TransformKeys[key]) {\n                transforms.push({ key, value });\n            } else {\n                style[key] = value.interpolation || value.animValue;\n            }\n        });\n\n        // Map the transforms into an Animated transforms array\n        if (transforms.length) {\n            style.transform = transforms.map(({ key, value }) => ({\n                [TransformKeys[key]]: value.interpolation || value.animValue,\n            }));\n        }\n\n        const onLayout = transformOrigin ? useTransformOrigin(transformOrigin, style.transform, onLayoutProp) : onLayoutProp;\n\n        // @ts-ignore\n        return <Component style={[styleProp, style]} onLayout={onLayout} {...rest} {...animProps} ref={ref} />;\n    }) as <TAnimate, TAnimateProps>(\n        p: Animated.AnimatedProps<ComponentPropsWithRef<T>> &\n            TExtraProps &\n            MotionComponentProps<T, ComponentStyle<T>, TAnimate, TAnimateProps>,\n        // @ts-ignore\n        ref: Ref<InstanceType<T>>\n    ) => ReactElement;\n}\nexport function createMotionAnimatedComponent<T extends ComponentType<any>>(component: T) {\n    return createMotionComponent(Animated.createAnimatedComponent(component));\n}\n"],"mappings":"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","ignoreList":[]}